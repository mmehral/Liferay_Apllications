/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;

import com.model.cholatalkiesusers;

import com.service.cholatalkiesusersService;

import com.service.persistence.cholatalkiesFinder;
import com.service.persistence.cholatalkiesPersistence;
import com.service.persistence.cholatalkiespathPersistence;
import com.service.persistence.cholatalkiesusersPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the cholatalkiesusers remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.service.impl.cholatalkiesusersServiceImpl}.
 * </p>
 *
 * @author adms.java1
 * @see com.service.impl.cholatalkiesusersServiceImpl
 * @see com.service.cholatalkiesusersServiceUtil
 * @generated
 */
public abstract class cholatalkiesusersServiceBaseImpl extends BaseServiceImpl
	implements cholatalkiesusersService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.service.cholatalkiesusersServiceUtil} to access the cholatalkiesusers remote service.
	 */

	/**
	 * Returns the cholatalkies local service.
	 *
	 * @return the cholatalkies local service
	 */
	public com.service.cholatalkiesLocalService getcholatalkiesLocalService() {
		return cholatalkiesLocalService;
	}

	/**
	 * Sets the cholatalkies local service.
	 *
	 * @param cholatalkiesLocalService the cholatalkies local service
	 */
	public void setcholatalkiesLocalService(
		com.service.cholatalkiesLocalService cholatalkiesLocalService) {
		this.cholatalkiesLocalService = cholatalkiesLocalService;
	}

	/**
	 * Returns the cholatalkies remote service.
	 *
	 * @return the cholatalkies remote service
	 */
	public com.service.cholatalkiesService getcholatalkiesService() {
		return cholatalkiesService;
	}

	/**
	 * Sets the cholatalkies remote service.
	 *
	 * @param cholatalkiesService the cholatalkies remote service
	 */
	public void setcholatalkiesService(
		com.service.cholatalkiesService cholatalkiesService) {
		this.cholatalkiesService = cholatalkiesService;
	}

	/**
	 * Returns the cholatalkies persistence.
	 *
	 * @return the cholatalkies persistence
	 */
	public cholatalkiesPersistence getcholatalkiesPersistence() {
		return cholatalkiesPersistence;
	}

	/**
	 * Sets the cholatalkies persistence.
	 *
	 * @param cholatalkiesPersistence the cholatalkies persistence
	 */
	public void setcholatalkiesPersistence(
		cholatalkiesPersistence cholatalkiesPersistence) {
		this.cholatalkiesPersistence = cholatalkiesPersistence;
	}

	/**
	 * Returns the cholatalkies finder.
	 *
	 * @return the cholatalkies finder
	 */
	public cholatalkiesFinder getcholatalkiesFinder() {
		return cholatalkiesFinder;
	}

	/**
	 * Sets the cholatalkies finder.
	 *
	 * @param cholatalkiesFinder the cholatalkies finder
	 */
	public void setcholatalkiesFinder(cholatalkiesFinder cholatalkiesFinder) {
		this.cholatalkiesFinder = cholatalkiesFinder;
	}

	/**
	 * Returns the cholatalkiespath local service.
	 *
	 * @return the cholatalkiespath local service
	 */
	public com.service.cholatalkiespathLocalService getcholatalkiespathLocalService() {
		return cholatalkiespathLocalService;
	}

	/**
	 * Sets the cholatalkiespath local service.
	 *
	 * @param cholatalkiespathLocalService the cholatalkiespath local service
	 */
	public void setcholatalkiespathLocalService(
		com.service.cholatalkiespathLocalService cholatalkiespathLocalService) {
		this.cholatalkiespathLocalService = cholatalkiespathLocalService;
	}

	/**
	 * Returns the cholatalkiespath remote service.
	 *
	 * @return the cholatalkiespath remote service
	 */
	public com.service.cholatalkiespathService getcholatalkiespathService() {
		return cholatalkiespathService;
	}

	/**
	 * Sets the cholatalkiespath remote service.
	 *
	 * @param cholatalkiespathService the cholatalkiespath remote service
	 */
	public void setcholatalkiespathService(
		com.service.cholatalkiespathService cholatalkiespathService) {
		this.cholatalkiespathService = cholatalkiespathService;
	}

	/**
	 * Returns the cholatalkiespath persistence.
	 *
	 * @return the cholatalkiespath persistence
	 */
	public cholatalkiespathPersistence getcholatalkiespathPersistence() {
		return cholatalkiespathPersistence;
	}

	/**
	 * Sets the cholatalkiespath persistence.
	 *
	 * @param cholatalkiespathPersistence the cholatalkiespath persistence
	 */
	public void setcholatalkiespathPersistence(
		cholatalkiespathPersistence cholatalkiespathPersistence) {
		this.cholatalkiespathPersistence = cholatalkiespathPersistence;
	}

	/**
	 * Returns the cholatalkiesusers local service.
	 *
	 * @return the cholatalkiesusers local service
	 */
	public com.service.cholatalkiesusersLocalService getcholatalkiesusersLocalService() {
		return cholatalkiesusersLocalService;
	}

	/**
	 * Sets the cholatalkiesusers local service.
	 *
	 * @param cholatalkiesusersLocalService the cholatalkiesusers local service
	 */
	public void setcholatalkiesusersLocalService(
		com.service.cholatalkiesusersLocalService cholatalkiesusersLocalService) {
		this.cholatalkiesusersLocalService = cholatalkiesusersLocalService;
	}

	/**
	 * Returns the cholatalkiesusers remote service.
	 *
	 * @return the cholatalkiesusers remote service
	 */
	public cholatalkiesusersService getcholatalkiesusersService() {
		return cholatalkiesusersService;
	}

	/**
	 * Sets the cholatalkiesusers remote service.
	 *
	 * @param cholatalkiesusersService the cholatalkiesusers remote service
	 */
	public void setcholatalkiesusersService(
		cholatalkiesusersService cholatalkiesusersService) {
		this.cholatalkiesusersService = cholatalkiesusersService;
	}

	/**
	 * Returns the cholatalkiesusers persistence.
	 *
	 * @return the cholatalkiesusers persistence
	 */
	public cholatalkiesusersPersistence getcholatalkiesusersPersistence() {
		return cholatalkiesusersPersistence;
	}

	/**
	 * Sets the cholatalkiesusers persistence.
	 *
	 * @param cholatalkiesusersPersistence the cholatalkiesusers persistence
	 */
	public void setcholatalkiesusersPersistence(
		cholatalkiesusersPersistence cholatalkiesusersPersistence) {
		this.cholatalkiesusersPersistence = cholatalkiesusersPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return cholatalkiesusersService.class.getName();
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return cholatalkiesusers.class;
	}

	protected String getModelClassName() {
		return cholatalkiesusers.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = cholatalkiesusersPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.service.cholatalkiesLocalService.class)
	protected com.service.cholatalkiesLocalService cholatalkiesLocalService;
	@BeanReference(type = com.service.cholatalkiesService.class)
	protected com.service.cholatalkiesService cholatalkiesService;
	@BeanReference(type = cholatalkiesPersistence.class)
	protected cholatalkiesPersistence cholatalkiesPersistence;
	@BeanReference(type = cholatalkiesFinder.class)
	protected cholatalkiesFinder cholatalkiesFinder;
	@BeanReference(type = com.service.cholatalkiespathLocalService.class)
	protected com.service.cholatalkiespathLocalService cholatalkiespathLocalService;
	@BeanReference(type = com.service.cholatalkiespathService.class)
	protected com.service.cholatalkiespathService cholatalkiespathService;
	@BeanReference(type = cholatalkiespathPersistence.class)
	protected cholatalkiespathPersistence cholatalkiespathPersistence;
	@BeanReference(type = com.service.cholatalkiesusersLocalService.class)
	protected com.service.cholatalkiesusersLocalService cholatalkiesusersLocalService;
	@BeanReference(type = cholatalkiesusersService.class)
	protected cholatalkiesusersService cholatalkiesusersService;
	@BeanReference(type = cholatalkiesusersPersistence.class)
	protected cholatalkiesusersPersistence cholatalkiesusersPersistence;
	@BeanReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@BeanReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private ClassLoader _classLoader;
	private cholatalkiesusersServiceClpInvoker _clpInvoker = new cholatalkiesusersServiceClpInvoker();
}