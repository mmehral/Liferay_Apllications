/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.chola.calendar.service.base;

import com.chola.calendar.model.corporateeventsdata;
import com.chola.calendar.service.corporateeventsdataService;
import com.chola.calendar.service.persistence.corporatecontentuniqueinformationPersistence;
import com.chola.calendar.service.persistence.corporateeventsdataFinder;
import com.chola.calendar.service.persistence.corporateeventsdataPersistence;
import com.chola.calendar.service.persistence.corporatepersonalisedparameterscontentstorePersistence;
import com.chola.calendar.service.persistence.eventcalendarFinder;
import com.chola.calendar.service.persistence.eventcalendarPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the corporateeventsdata remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.chola.calendar.service.impl.corporateeventsdataServiceImpl}.
 * </p>
 *
 * @author adms.java1
 * @see com.chola.calendar.service.impl.corporateeventsdataServiceImpl
 * @see com.chola.calendar.service.corporateeventsdataServiceUtil
 * @generated
 */
public abstract class corporateeventsdataServiceBaseImpl extends BaseServiceImpl
	implements corporateeventsdataService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.chola.calendar.service.corporateeventsdataServiceUtil} to access the corporateeventsdata remote service.
	 */

	/**
	 * Returns the corporatecontentuniqueinformation local service.
	 *
	 * @return the corporatecontentuniqueinformation local service
	 */
	public com.chola.calendar.service.corporatecontentuniqueinformationLocalService getcorporatecontentuniqueinformationLocalService() {
		return corporatecontentuniqueinformationLocalService;
	}

	/**
	 * Sets the corporatecontentuniqueinformation local service.
	 *
	 * @param corporatecontentuniqueinformationLocalService the corporatecontentuniqueinformation local service
	 */
	public void setcorporatecontentuniqueinformationLocalService(
		com.chola.calendar.service.corporatecontentuniqueinformationLocalService corporatecontentuniqueinformationLocalService) {
		this.corporatecontentuniqueinformationLocalService = corporatecontentuniqueinformationLocalService;
	}

	/**
	 * Returns the corporatecontentuniqueinformation remote service.
	 *
	 * @return the corporatecontentuniqueinformation remote service
	 */
	public com.chola.calendar.service.corporatecontentuniqueinformationService getcorporatecontentuniqueinformationService() {
		return corporatecontentuniqueinformationService;
	}

	/**
	 * Sets the corporatecontentuniqueinformation remote service.
	 *
	 * @param corporatecontentuniqueinformationService the corporatecontentuniqueinformation remote service
	 */
	public void setcorporatecontentuniqueinformationService(
		com.chola.calendar.service.corporatecontentuniqueinformationService corporatecontentuniqueinformationService) {
		this.corporatecontentuniqueinformationService = corporatecontentuniqueinformationService;
	}

	/**
	 * Returns the corporatecontentuniqueinformation persistence.
	 *
	 * @return the corporatecontentuniqueinformation persistence
	 */
	public corporatecontentuniqueinformationPersistence getcorporatecontentuniqueinformationPersistence() {
		return corporatecontentuniqueinformationPersistence;
	}

	/**
	 * Sets the corporatecontentuniqueinformation persistence.
	 *
	 * @param corporatecontentuniqueinformationPersistence the corporatecontentuniqueinformation persistence
	 */
	public void setcorporatecontentuniqueinformationPersistence(
		corporatecontentuniqueinformationPersistence corporatecontentuniqueinformationPersistence) {
		this.corporatecontentuniqueinformationPersistence = corporatecontentuniqueinformationPersistence;
	}

	/**
	 * Returns the corporateeventsdata local service.
	 *
	 * @return the corporateeventsdata local service
	 */
	public com.chola.calendar.service.corporateeventsdataLocalService getcorporateeventsdataLocalService() {
		return corporateeventsdataLocalService;
	}

	/**
	 * Sets the corporateeventsdata local service.
	 *
	 * @param corporateeventsdataLocalService the corporateeventsdata local service
	 */
	public void setcorporateeventsdataLocalService(
		com.chola.calendar.service.corporateeventsdataLocalService corporateeventsdataLocalService) {
		this.corporateeventsdataLocalService = corporateeventsdataLocalService;
	}

	/**
	 * Returns the corporateeventsdata remote service.
	 *
	 * @return the corporateeventsdata remote service
	 */
	public corporateeventsdataService getcorporateeventsdataService() {
		return corporateeventsdataService;
	}

	/**
	 * Sets the corporateeventsdata remote service.
	 *
	 * @param corporateeventsdataService the corporateeventsdata remote service
	 */
	public void setcorporateeventsdataService(
		corporateeventsdataService corporateeventsdataService) {
		this.corporateeventsdataService = corporateeventsdataService;
	}

	/**
	 * Returns the corporateeventsdata persistence.
	 *
	 * @return the corporateeventsdata persistence
	 */
	public corporateeventsdataPersistence getcorporateeventsdataPersistence() {
		return corporateeventsdataPersistence;
	}

	/**
	 * Sets the corporateeventsdata persistence.
	 *
	 * @param corporateeventsdataPersistence the corporateeventsdata persistence
	 */
	public void setcorporateeventsdataPersistence(
		corporateeventsdataPersistence corporateeventsdataPersistence) {
		this.corporateeventsdataPersistence = corporateeventsdataPersistence;
	}

	/**
	 * Returns the corporateeventsdata finder.
	 *
	 * @return the corporateeventsdata finder
	 */
	public corporateeventsdataFinder getcorporateeventsdataFinder() {
		return corporateeventsdataFinder;
	}

	/**
	 * Sets the corporateeventsdata finder.
	 *
	 * @param corporateeventsdataFinder the corporateeventsdata finder
	 */
	public void setcorporateeventsdataFinder(
		corporateeventsdataFinder corporateeventsdataFinder) {
		this.corporateeventsdataFinder = corporateeventsdataFinder;
	}

	/**
	 * Returns the corporatepersonalisedparameterscontentstore local service.
	 *
	 * @return the corporatepersonalisedparameterscontentstore local service
	 */
	public com.chola.calendar.service.corporatepersonalisedparameterscontentstoreLocalService getcorporatepersonalisedparameterscontentstoreLocalService() {
		return corporatepersonalisedparameterscontentstoreLocalService;
	}

	/**
	 * Sets the corporatepersonalisedparameterscontentstore local service.
	 *
	 * @param corporatepersonalisedparameterscontentstoreLocalService the corporatepersonalisedparameterscontentstore local service
	 */
	public void setcorporatepersonalisedparameterscontentstoreLocalService(
		com.chola.calendar.service.corporatepersonalisedparameterscontentstoreLocalService corporatepersonalisedparameterscontentstoreLocalService) {
		this.corporatepersonalisedparameterscontentstoreLocalService = corporatepersonalisedparameterscontentstoreLocalService;
	}

	/**
	 * Returns the corporatepersonalisedparameterscontentstore remote service.
	 *
	 * @return the corporatepersonalisedparameterscontentstore remote service
	 */
	public com.chola.calendar.service.corporatepersonalisedparameterscontentstoreService getcorporatepersonalisedparameterscontentstoreService() {
		return corporatepersonalisedparameterscontentstoreService;
	}

	/**
	 * Sets the corporatepersonalisedparameterscontentstore remote service.
	 *
	 * @param corporatepersonalisedparameterscontentstoreService the corporatepersonalisedparameterscontentstore remote service
	 */
	public void setcorporatepersonalisedparameterscontentstoreService(
		com.chola.calendar.service.corporatepersonalisedparameterscontentstoreService corporatepersonalisedparameterscontentstoreService) {
		this.corporatepersonalisedparameterscontentstoreService = corporatepersonalisedparameterscontentstoreService;
	}

	/**
	 * Returns the corporatepersonalisedparameterscontentstore persistence.
	 *
	 * @return the corporatepersonalisedparameterscontentstore persistence
	 */
	public corporatepersonalisedparameterscontentstorePersistence getcorporatepersonalisedparameterscontentstorePersistence() {
		return corporatepersonalisedparameterscontentstorePersistence;
	}

	/**
	 * Sets the corporatepersonalisedparameterscontentstore persistence.
	 *
	 * @param corporatepersonalisedparameterscontentstorePersistence the corporatepersonalisedparameterscontentstore persistence
	 */
	public void setcorporatepersonalisedparameterscontentstorePersistence(
		corporatepersonalisedparameterscontentstorePersistence corporatepersonalisedparameterscontentstorePersistence) {
		this.corporatepersonalisedparameterscontentstorePersistence = corporatepersonalisedparameterscontentstorePersistence;
	}

	/**
	 * Returns the eventcalendar local service.
	 *
	 * @return the eventcalendar local service
	 */
	public com.chola.calendar.service.eventcalendarLocalService geteventcalendarLocalService() {
		return eventcalendarLocalService;
	}

	/**
	 * Sets the eventcalendar local service.
	 *
	 * @param eventcalendarLocalService the eventcalendar local service
	 */
	public void seteventcalendarLocalService(
		com.chola.calendar.service.eventcalendarLocalService eventcalendarLocalService) {
		this.eventcalendarLocalService = eventcalendarLocalService;
	}

	/**
	 * Returns the eventcalendar remote service.
	 *
	 * @return the eventcalendar remote service
	 */
	public com.chola.calendar.service.eventcalendarService geteventcalendarService() {
		return eventcalendarService;
	}

	/**
	 * Sets the eventcalendar remote service.
	 *
	 * @param eventcalendarService the eventcalendar remote service
	 */
	public void seteventcalendarService(
		com.chola.calendar.service.eventcalendarService eventcalendarService) {
		this.eventcalendarService = eventcalendarService;
	}

	/**
	 * Returns the eventcalendar persistence.
	 *
	 * @return the eventcalendar persistence
	 */
	public eventcalendarPersistence geteventcalendarPersistence() {
		return eventcalendarPersistence;
	}

	/**
	 * Sets the eventcalendar persistence.
	 *
	 * @param eventcalendarPersistence the eventcalendar persistence
	 */
	public void seteventcalendarPersistence(
		eventcalendarPersistence eventcalendarPersistence) {
		this.eventcalendarPersistence = eventcalendarPersistence;
	}

	/**
	 * Returns the eventcalendar finder.
	 *
	 * @return the eventcalendar finder
	 */
	public eventcalendarFinder geteventcalendarFinder() {
		return eventcalendarFinder;
	}

	/**
	 * Sets the eventcalendar finder.
	 *
	 * @param eventcalendarFinder the eventcalendar finder
	 */
	public void seteventcalendarFinder(eventcalendarFinder eventcalendarFinder) {
		this.eventcalendarFinder = eventcalendarFinder;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return corporateeventsdataService.class.getName();
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return corporateeventsdata.class;
	}

	protected String getModelClassName() {
		return corporateeventsdata.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = corporateeventsdataPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.chola.calendar.service.corporatecontentuniqueinformationLocalService.class)
	protected com.chola.calendar.service.corporatecontentuniqueinformationLocalService corporatecontentuniqueinformationLocalService;
	@BeanReference(type = com.chola.calendar.service.corporatecontentuniqueinformationService.class)
	protected com.chola.calendar.service.corporatecontentuniqueinformationService corporatecontentuniqueinformationService;
	@BeanReference(type = corporatecontentuniqueinformationPersistence.class)
	protected corporatecontentuniqueinformationPersistence corporatecontentuniqueinformationPersistence;
	@BeanReference(type = com.chola.calendar.service.corporateeventsdataLocalService.class)
	protected com.chola.calendar.service.corporateeventsdataLocalService corporateeventsdataLocalService;
	@BeanReference(type = corporateeventsdataService.class)
	protected corporateeventsdataService corporateeventsdataService;
	@BeanReference(type = corporateeventsdataPersistence.class)
	protected corporateeventsdataPersistence corporateeventsdataPersistence;
	@BeanReference(type = corporateeventsdataFinder.class)
	protected corporateeventsdataFinder corporateeventsdataFinder;
	@BeanReference(type = com.chola.calendar.service.corporatepersonalisedparameterscontentstoreLocalService.class)
	protected com.chola.calendar.service.corporatepersonalisedparameterscontentstoreLocalService corporatepersonalisedparameterscontentstoreLocalService;
	@BeanReference(type = com.chola.calendar.service.corporatepersonalisedparameterscontentstoreService.class)
	protected com.chola.calendar.service.corporatepersonalisedparameterscontentstoreService corporatepersonalisedparameterscontentstoreService;
	@BeanReference(type = corporatepersonalisedparameterscontentstorePersistence.class)
	protected corporatepersonalisedparameterscontentstorePersistence corporatepersonalisedparameterscontentstorePersistence;
	@BeanReference(type = com.chola.calendar.service.eventcalendarLocalService.class)
	protected com.chola.calendar.service.eventcalendarLocalService eventcalendarLocalService;
	@BeanReference(type = com.chola.calendar.service.eventcalendarService.class)
	protected com.chola.calendar.service.eventcalendarService eventcalendarService;
	@BeanReference(type = eventcalendarPersistence.class)
	protected eventcalendarPersistence eventcalendarPersistence;
	@BeanReference(type = eventcalendarFinder.class)
	protected eventcalendarFinder eventcalendarFinder;
	@BeanReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@BeanReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private ClassLoader _classLoader;
	private corporateeventsdataServiceClpInvoker _clpInvoker = new corporateeventsdataServiceClpInvoker();
}