/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.chola.calendar.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.chola.calendar.model.corporatepersonalisedparameterscontentstore;
import com.chola.calendar.model.corporatepersonalisedparameterscontentstoreModel;
import com.chola.calendar.model.corporatepersonalisedparameterscontentstoreSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the corporatepersonalisedparameterscontentstore service. Represents a row in the &quot;events_corporatepersonalisedparameterscontentstore&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link corporatepersonalisedparameterscontentstoreModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link corporatepersonalisedparameterscontentstoreImpl}.
 * </p>
 *
 * @author adms.java1
 * @see corporatepersonalisedparameterscontentstoreImpl
 * @see corporatepersonalisedparameterscontentstore
 * @see corporatepersonalisedparameterscontentstoreModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class corporatepersonalisedparameterscontentstoreModelImpl
	extends BaseModelImpl<corporatepersonalisedparameterscontentstore>
	implements corporatepersonalisedparameterscontentstoreModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a corporatepersonalisedparameterscontentstore model instance should use the {@link corporatepersonalisedparameterscontentstore} interface instead.
	 */
	public static final String TABLE_NAME = "events_corporatepersonalisedparameterscontentstore";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "content_id", Types.BIGINT },
			{ "business", Types.VARCHAR },
			{ "unit", Types.VARCHAR },
			{ "function", Types.VARCHAR },
			{ "department", Types.VARCHAR },
			{ "designation", Types.VARCHAR },
			{ "product", Types.VARCHAR },
			{ "zone", Types.VARCHAR },
			{ "branch", Types.VARCHAR },
			{ "grade", Types.VARCHAR },
			{ "region", Types.VARCHAR },
			{ "location", Types.VARCHAR },
			{ "user_id", Types.VARCHAR },
			{ "gender", Types.VARCHAR },
			{ "age_type", Types.VARCHAR },
			{ "age_value", Types.VARCHAR },
			{ "notification_type", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("content_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("business", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("unit", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("function", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("department", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("designation", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("product", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("zone", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("branch", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("grade", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("region", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("location", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("user_id", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("gender", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("age_type", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("age_value", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("notification_type", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table events_corporatepersonalisedparameterscontentstore (id_ LONG not null primary key,content_id LONG,business VARCHAR(75) null,unit VARCHAR(75) null,function VARCHAR(75) null,department VARCHAR(75) null,designation VARCHAR(75) null,product VARCHAR(75) null,zone VARCHAR(75) null,branch VARCHAR(75) null,grade VARCHAR(75) null,region VARCHAR(75) null,location VARCHAR(75) null,user_id VARCHAR(75) null,gender VARCHAR(75) null,age_type VARCHAR(75) null,age_value VARCHAR(75) null,notification_type LONG)";
	public static final String TABLE_SQL_DROP = "drop table events_corporatepersonalisedparameterscontentstore";
	public static final String ORDER_BY_JPQL = " ORDER BY corporatepersonalisedparameterscontentstore.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY events_corporatepersonalisedparameterscontentstore.id_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.chola.calendar.model.corporatepersonalisedparameterscontentstore"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.chola.calendar.model.corporatepersonalisedparameterscontentstore"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.chola.calendar.model.corporatepersonalisedparameterscontentstore"),
			true);
	public static final long CONTENT_ID_COLUMN_BITMASK = 1L;
	public static final long ID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static corporatepersonalisedparameterscontentstore toModel(
		corporatepersonalisedparameterscontentstoreSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		corporatepersonalisedparameterscontentstore model = new corporatepersonalisedparameterscontentstoreImpl();

		model.setId(soapModel.getId());
		model.setContent_id(soapModel.getContent_id());
		model.setBusiness(soapModel.getBusiness());
		model.setUnit(soapModel.getUnit());
		model.setFunction(soapModel.getFunction());
		model.setDepartment(soapModel.getDepartment());
		model.setDesignation(soapModel.getDesignation());
		model.setProduct(soapModel.getProduct());
		model.setZone(soapModel.getZone());
		model.setBranch(soapModel.getBranch());
		model.setGrade(soapModel.getGrade());
		model.setRegion(soapModel.getRegion());
		model.setLocation(soapModel.getLocation());
		model.setUser_id(soapModel.getUser_id());
		model.setGender(soapModel.getGender());
		model.setAge_type(soapModel.getAge_type());
		model.setAge_value(soapModel.getAge_value());
		model.setNotification_type(soapModel.getNotification_type());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<corporatepersonalisedparameterscontentstore> toModels(
		corporatepersonalisedparameterscontentstoreSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<corporatepersonalisedparameterscontentstore> models = new ArrayList<corporatepersonalisedparameterscontentstore>(soapModels.length);

		for (corporatepersonalisedparameterscontentstoreSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.chola.calendar.model.corporatepersonalisedparameterscontentstore"));

	public corporatepersonalisedparameterscontentstoreModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return corporatepersonalisedparameterscontentstore.class;
	}

	@Override
	public String getModelClassName() {
		return corporatepersonalisedparameterscontentstore.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("content_id", getContent_id());
		attributes.put("business", getBusiness());
		attributes.put("unit", getUnit());
		attributes.put("function", getFunction());
		attributes.put("department", getDepartment());
		attributes.put("designation", getDesignation());
		attributes.put("product", getProduct());
		attributes.put("zone", getZone());
		attributes.put("branch", getBranch());
		attributes.put("grade", getGrade());
		attributes.put("region", getRegion());
		attributes.put("location", getLocation());
		attributes.put("user_id", getUser_id());
		attributes.put("gender", getGender());
		attributes.put("age_type", getAge_type());
		attributes.put("age_value", getAge_value());
		attributes.put("notification_type", getNotification_type());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long content_id = (Long)attributes.get("content_id");

		if (content_id != null) {
			setContent_id(content_id);
		}

		String business = (String)attributes.get("business");

		if (business != null) {
			setBusiness(business);
		}

		String unit = (String)attributes.get("unit");

		if (unit != null) {
			setUnit(unit);
		}

		String function = (String)attributes.get("function");

		if (function != null) {
			setFunction(function);
		}

		String department = (String)attributes.get("department");

		if (department != null) {
			setDepartment(department);
		}

		String designation = (String)attributes.get("designation");

		if (designation != null) {
			setDesignation(designation);
		}

		String product = (String)attributes.get("product");

		if (product != null) {
			setProduct(product);
		}

		String zone = (String)attributes.get("zone");

		if (zone != null) {
			setZone(zone);
		}

		String branch = (String)attributes.get("branch");

		if (branch != null) {
			setBranch(branch);
		}

		String grade = (String)attributes.get("grade");

		if (grade != null) {
			setGrade(grade);
		}

		String region = (String)attributes.get("region");

		if (region != null) {
			setRegion(region);
		}

		String location = (String)attributes.get("location");

		if (location != null) {
			setLocation(location);
		}

		String user_id = (String)attributes.get("user_id");

		if (user_id != null) {
			setUser_id(user_id);
		}

		String gender = (String)attributes.get("gender");

		if (gender != null) {
			setGender(gender);
		}

		String age_type = (String)attributes.get("age_type");

		if (age_type != null) {
			setAge_type(age_type);
		}

		String age_value = (String)attributes.get("age_value");

		if (age_value != null) {
			setAge_value(age_value);
		}

		Long notification_type = (Long)attributes.get("notification_type");

		if (notification_type != null) {
			setNotification_type(notification_type);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public long getContent_id() {
		return _content_id;
	}

	@Override
	public void setContent_id(long content_id) {
		_columnBitmask |= CONTENT_ID_COLUMN_BITMASK;

		if (!_setOriginalContent_id) {
			_setOriginalContent_id = true;

			_originalContent_id = _content_id;
		}

		_content_id = content_id;
	}

	public long getOriginalContent_id() {
		return _originalContent_id;
	}

	@JSON
	@Override
	public String getBusiness() {
		if (_business == null) {
			return StringPool.BLANK;
		}
		else {
			return _business;
		}
	}

	@Override
	public void setBusiness(String business) {
		_business = business;
	}

	@JSON
	@Override
	public String getUnit() {
		if (_unit == null) {
			return StringPool.BLANK;
		}
		else {
			return _unit;
		}
	}

	@Override
	public void setUnit(String unit) {
		_unit = unit;
	}

	@JSON
	@Override
	public String getFunction() {
		if (_function == null) {
			return StringPool.BLANK;
		}
		else {
			return _function;
		}
	}

	@Override
	public void setFunction(String function) {
		_function = function;
	}

	@JSON
	@Override
	public String getDepartment() {
		if (_department == null) {
			return StringPool.BLANK;
		}
		else {
			return _department;
		}
	}

	@Override
	public void setDepartment(String department) {
		_department = department;
	}

	@JSON
	@Override
	public String getDesignation() {
		if (_designation == null) {
			return StringPool.BLANK;
		}
		else {
			return _designation;
		}
	}

	@Override
	public void setDesignation(String designation) {
		_designation = designation;
	}

	@JSON
	@Override
	public String getProduct() {
		if (_product == null) {
			return StringPool.BLANK;
		}
		else {
			return _product;
		}
	}

	@Override
	public void setProduct(String product) {
		_product = product;
	}

	@JSON
	@Override
	public String getZone() {
		if (_zone == null) {
			return StringPool.BLANK;
		}
		else {
			return _zone;
		}
	}

	@Override
	public void setZone(String zone) {
		_zone = zone;
	}

	@JSON
	@Override
	public String getBranch() {
		if (_branch == null) {
			return StringPool.BLANK;
		}
		else {
			return _branch;
		}
	}

	@Override
	public void setBranch(String branch) {
		_branch = branch;
	}

	@JSON
	@Override
	public String getGrade() {
		if (_grade == null) {
			return StringPool.BLANK;
		}
		else {
			return _grade;
		}
	}

	@Override
	public void setGrade(String grade) {
		_grade = grade;
	}

	@JSON
	@Override
	public String getRegion() {
		if (_region == null) {
			return StringPool.BLANK;
		}
		else {
			return _region;
		}
	}

	@Override
	public void setRegion(String region) {
		_region = region;
	}

	@JSON
	@Override
	public String getLocation() {
		if (_location == null) {
			return StringPool.BLANK;
		}
		else {
			return _location;
		}
	}

	@Override
	public void setLocation(String location) {
		_location = location;
	}

	@JSON
	@Override
	public String getUser_id() {
		if (_user_id == null) {
			return StringPool.BLANK;
		}
		else {
			return _user_id;
		}
	}

	@Override
	public void setUser_id(String user_id) {
		_user_id = user_id;
	}

	@JSON
	@Override
	public String getGender() {
		if (_gender == null) {
			return StringPool.BLANK;
		}
		else {
			return _gender;
		}
	}

	@Override
	public void setGender(String gender) {
		_gender = gender;
	}

	@JSON
	@Override
	public String getAge_type() {
		if (_age_type == null) {
			return StringPool.BLANK;
		}
		else {
			return _age_type;
		}
	}

	@Override
	public void setAge_type(String age_type) {
		_age_type = age_type;
	}

	@JSON
	@Override
	public String getAge_value() {
		if (_age_value == null) {
			return StringPool.BLANK;
		}
		else {
			return _age_value;
		}
	}

	@Override
	public void setAge_value(String age_value) {
		_age_value = age_value;
	}

	@JSON
	@Override
	public long getNotification_type() {
		return _notification_type;
	}

	@Override
	public void setNotification_type(long notification_type) {
		_notification_type = notification_type;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			corporatepersonalisedparameterscontentstore.class.getName(),
			getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public corporatepersonalisedparameterscontentstore toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (corporatepersonalisedparameterscontentstore)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		corporatepersonalisedparameterscontentstoreImpl corporatepersonalisedparameterscontentstoreImpl =
			new corporatepersonalisedparameterscontentstoreImpl();

		corporatepersonalisedparameterscontentstoreImpl.setId(getId());
		corporatepersonalisedparameterscontentstoreImpl.setContent_id(getContent_id());
		corporatepersonalisedparameterscontentstoreImpl.setBusiness(getBusiness());
		corporatepersonalisedparameterscontentstoreImpl.setUnit(getUnit());
		corporatepersonalisedparameterscontentstoreImpl.setFunction(getFunction());
		corporatepersonalisedparameterscontentstoreImpl.setDepartment(getDepartment());
		corporatepersonalisedparameterscontentstoreImpl.setDesignation(getDesignation());
		corporatepersonalisedparameterscontentstoreImpl.setProduct(getProduct());
		corporatepersonalisedparameterscontentstoreImpl.setZone(getZone());
		corporatepersonalisedparameterscontentstoreImpl.setBranch(getBranch());
		corporatepersonalisedparameterscontentstoreImpl.setGrade(getGrade());
		corporatepersonalisedparameterscontentstoreImpl.setRegion(getRegion());
		corporatepersonalisedparameterscontentstoreImpl.setLocation(getLocation());
		corporatepersonalisedparameterscontentstoreImpl.setUser_id(getUser_id());
		corporatepersonalisedparameterscontentstoreImpl.setGender(getGender());
		corporatepersonalisedparameterscontentstoreImpl.setAge_type(getAge_type());
		corporatepersonalisedparameterscontentstoreImpl.setAge_value(getAge_value());
		corporatepersonalisedparameterscontentstoreImpl.setNotification_type(getNotification_type());

		corporatepersonalisedparameterscontentstoreImpl.resetOriginalValues();

		return corporatepersonalisedparameterscontentstoreImpl;
	}

	@Override
	public int compareTo(
		corporatepersonalisedparameterscontentstore corporatepersonalisedparameterscontentstore) {
		long primaryKey = corporatepersonalisedparameterscontentstore.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof corporatepersonalisedparameterscontentstore)) {
			return false;
		}

		corporatepersonalisedparameterscontentstore corporatepersonalisedparameterscontentstore =
			(corporatepersonalisedparameterscontentstore)obj;

		long primaryKey = corporatepersonalisedparameterscontentstore.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		corporatepersonalisedparameterscontentstoreModelImpl corporatepersonalisedparameterscontentstoreModelImpl =
			this;

		corporatepersonalisedparameterscontentstoreModelImpl._originalContent_id = corporatepersonalisedparameterscontentstoreModelImpl._content_id;

		corporatepersonalisedparameterscontentstoreModelImpl._setOriginalContent_id = false;

		corporatepersonalisedparameterscontentstoreModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<corporatepersonalisedparameterscontentstore> toCacheModel() {
		corporatepersonalisedparameterscontentstoreCacheModel corporatepersonalisedparameterscontentstoreCacheModel =
			new corporatepersonalisedparameterscontentstoreCacheModel();

		corporatepersonalisedparameterscontentstoreCacheModel.id = getId();

		corporatepersonalisedparameterscontentstoreCacheModel.content_id = getContent_id();

		corporatepersonalisedparameterscontentstoreCacheModel.business = getBusiness();

		String business = corporatepersonalisedparameterscontentstoreCacheModel.business;

		if ((business != null) && (business.length() == 0)) {
			corporatepersonalisedparameterscontentstoreCacheModel.business = null;
		}

		corporatepersonalisedparameterscontentstoreCacheModel.unit = getUnit();

		String unit = corporatepersonalisedparameterscontentstoreCacheModel.unit;

		if ((unit != null) && (unit.length() == 0)) {
			corporatepersonalisedparameterscontentstoreCacheModel.unit = null;
		}

		corporatepersonalisedparameterscontentstoreCacheModel.function = getFunction();

		String function = corporatepersonalisedparameterscontentstoreCacheModel.function;

		if ((function != null) && (function.length() == 0)) {
			corporatepersonalisedparameterscontentstoreCacheModel.function = null;
		}

		corporatepersonalisedparameterscontentstoreCacheModel.department = getDepartment();

		String department = corporatepersonalisedparameterscontentstoreCacheModel.department;

		if ((department != null) && (department.length() == 0)) {
			corporatepersonalisedparameterscontentstoreCacheModel.department = null;
		}

		corporatepersonalisedparameterscontentstoreCacheModel.designation = getDesignation();

		String designation = corporatepersonalisedparameterscontentstoreCacheModel.designation;

		if ((designation != null) && (designation.length() == 0)) {
			corporatepersonalisedparameterscontentstoreCacheModel.designation = null;
		}

		corporatepersonalisedparameterscontentstoreCacheModel.product = getProduct();

		String product = corporatepersonalisedparameterscontentstoreCacheModel.product;

		if ((product != null) && (product.length() == 0)) {
			corporatepersonalisedparameterscontentstoreCacheModel.product = null;
		}

		corporatepersonalisedparameterscontentstoreCacheModel.zone = getZone();

		String zone = corporatepersonalisedparameterscontentstoreCacheModel.zone;

		if ((zone != null) && (zone.length() == 0)) {
			corporatepersonalisedparameterscontentstoreCacheModel.zone = null;
		}

		corporatepersonalisedparameterscontentstoreCacheModel.branch = getBranch();

		String branch = corporatepersonalisedparameterscontentstoreCacheModel.branch;

		if ((branch != null) && (branch.length() == 0)) {
			corporatepersonalisedparameterscontentstoreCacheModel.branch = null;
		}

		corporatepersonalisedparameterscontentstoreCacheModel.grade = getGrade();

		String grade = corporatepersonalisedparameterscontentstoreCacheModel.grade;

		if ((grade != null) && (grade.length() == 0)) {
			corporatepersonalisedparameterscontentstoreCacheModel.grade = null;
		}

		corporatepersonalisedparameterscontentstoreCacheModel.region = getRegion();

		String region = corporatepersonalisedparameterscontentstoreCacheModel.region;

		if ((region != null) && (region.length() == 0)) {
			corporatepersonalisedparameterscontentstoreCacheModel.region = null;
		}

		corporatepersonalisedparameterscontentstoreCacheModel.location = getLocation();

		String location = corporatepersonalisedparameterscontentstoreCacheModel.location;

		if ((location != null) && (location.length() == 0)) {
			corporatepersonalisedparameterscontentstoreCacheModel.location = null;
		}

		corporatepersonalisedparameterscontentstoreCacheModel.user_id = getUser_id();

		String user_id = corporatepersonalisedparameterscontentstoreCacheModel.user_id;

		if ((user_id != null) && (user_id.length() == 0)) {
			corporatepersonalisedparameterscontentstoreCacheModel.user_id = null;
		}

		corporatepersonalisedparameterscontentstoreCacheModel.gender = getGender();

		String gender = corporatepersonalisedparameterscontentstoreCacheModel.gender;

		if ((gender != null) && (gender.length() == 0)) {
			corporatepersonalisedparameterscontentstoreCacheModel.gender = null;
		}

		corporatepersonalisedparameterscontentstoreCacheModel.age_type = getAge_type();

		String age_type = corporatepersonalisedparameterscontentstoreCacheModel.age_type;

		if ((age_type != null) && (age_type.length() == 0)) {
			corporatepersonalisedparameterscontentstoreCacheModel.age_type = null;
		}

		corporatepersonalisedparameterscontentstoreCacheModel.age_value = getAge_value();

		String age_value = corporatepersonalisedparameterscontentstoreCacheModel.age_value;

		if ((age_value != null) && (age_value.length() == 0)) {
			corporatepersonalisedparameterscontentstoreCacheModel.age_value = null;
		}

		corporatepersonalisedparameterscontentstoreCacheModel.notification_type = getNotification_type();

		return corporatepersonalisedparameterscontentstoreCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(37);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", content_id=");
		sb.append(getContent_id());
		sb.append(", business=");
		sb.append(getBusiness());
		sb.append(", unit=");
		sb.append(getUnit());
		sb.append(", function=");
		sb.append(getFunction());
		sb.append(", department=");
		sb.append(getDepartment());
		sb.append(", designation=");
		sb.append(getDesignation());
		sb.append(", product=");
		sb.append(getProduct());
		sb.append(", zone=");
		sb.append(getZone());
		sb.append(", branch=");
		sb.append(getBranch());
		sb.append(", grade=");
		sb.append(getGrade());
		sb.append(", region=");
		sb.append(getRegion());
		sb.append(", location=");
		sb.append(getLocation());
		sb.append(", user_id=");
		sb.append(getUser_id());
		sb.append(", gender=");
		sb.append(getGender());
		sb.append(", age_type=");
		sb.append(getAge_type());
		sb.append(", age_value=");
		sb.append(getAge_value());
		sb.append(", notification_type=");
		sb.append(getNotification_type());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(58);

		sb.append("<model><model-name>");
		sb.append(
			"com.chola.calendar.model.corporatepersonalisedparameterscontentstore");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>content_id</column-name><column-value><![CDATA[");
		sb.append(getContent_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>business</column-name><column-value><![CDATA[");
		sb.append(getBusiness());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>unit</column-name><column-value><![CDATA[");
		sb.append(getUnit());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>function</column-name><column-value><![CDATA[");
		sb.append(getFunction());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>department</column-name><column-value><![CDATA[");
		sb.append(getDepartment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>designation</column-name><column-value><![CDATA[");
		sb.append(getDesignation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>product</column-name><column-value><![CDATA[");
		sb.append(getProduct());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>zone</column-name><column-value><![CDATA[");
		sb.append(getZone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>branch</column-name><column-value><![CDATA[");
		sb.append(getBranch());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>grade</column-name><column-value><![CDATA[");
		sb.append(getGrade());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>region</column-name><column-value><![CDATA[");
		sb.append(getRegion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>location</column-name><column-value><![CDATA[");
		sb.append(getLocation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>user_id</column-name><column-value><![CDATA[");
		sb.append(getUser_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gender</column-name><column-value><![CDATA[");
		sb.append(getGender());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>age_type</column-name><column-value><![CDATA[");
		sb.append(getAge_type());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>age_value</column-name><column-value><![CDATA[");
		sb.append(getAge_value());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>notification_type</column-name><column-value><![CDATA[");
		sb.append(getNotification_type());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = corporatepersonalisedparameterscontentstore.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			corporatepersonalisedparameterscontentstore.class
		};
	private long _id;
	private long _content_id;
	private long _originalContent_id;
	private boolean _setOriginalContent_id;
	private String _business;
	private String _unit;
	private String _function;
	private String _department;
	private String _designation;
	private String _product;
	private String _zone;
	private String _branch;
	private String _grade;
	private String _region;
	private String _location;
	private String _user_id;
	private String _gender;
	private String _age_type;
	private String _age_value;
	private long _notification_type;
	private long _columnBitmask;
	private corporatepersonalisedparameterscontentstore _escapedModel;
}