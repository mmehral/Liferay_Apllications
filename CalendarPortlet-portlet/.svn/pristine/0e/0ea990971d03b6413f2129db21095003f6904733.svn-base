/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.chola.calendar.service.base;

import com.chola.calendar.model.EmpInfoEntity;
import com.chola.calendar.service.EmpInfoEntityService;
import com.chola.calendar.service.persistence.EmpInfoEntityPersistence;
import com.chola.calendar.service.persistence.dataPersistence;
import com.chola.calendar.service.persistence.eventcalendarFinder;
import com.chola.calendar.service.persistence.eventcalendarPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the emp info entity remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.chola.calendar.service.impl.EmpInfoEntityServiceImpl}.
 * </p>
 *
 * @author adms.java1
 * @see com.chola.calendar.service.impl.EmpInfoEntityServiceImpl
 * @see com.chola.calendar.service.EmpInfoEntityServiceUtil
 * @generated
 */
public abstract class EmpInfoEntityServiceBaseImpl extends BaseServiceImpl
	implements EmpInfoEntityService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.chola.calendar.service.EmpInfoEntityServiceUtil} to access the emp info entity remote service.
	 */

	/**
	 * Returns the data local service.
	 *
	 * @return the data local service
	 */
	public com.chola.calendar.service.dataLocalService getdataLocalService() {
		return dataLocalService;
	}

	/**
	 * Sets the data local service.
	 *
	 * @param dataLocalService the data local service
	 */
	public void setdataLocalService(
		com.chola.calendar.service.dataLocalService dataLocalService) {
		this.dataLocalService = dataLocalService;
	}

	/**
	 * Returns the data remote service.
	 *
	 * @return the data remote service
	 */
	public com.chola.calendar.service.dataService getdataService() {
		return dataService;
	}

	/**
	 * Sets the data remote service.
	 *
	 * @param dataService the data remote service
	 */
	public void setdataService(
		com.chola.calendar.service.dataService dataService) {
		this.dataService = dataService;
	}

	/**
	 * Returns the data persistence.
	 *
	 * @return the data persistence
	 */
	public dataPersistence getdataPersistence() {
		return dataPersistence;
	}

	/**
	 * Sets the data persistence.
	 *
	 * @param dataPersistence the data persistence
	 */
	public void setdataPersistence(dataPersistence dataPersistence) {
		this.dataPersistence = dataPersistence;
	}

	/**
	 * Returns the emp info entity local service.
	 *
	 * @return the emp info entity local service
	 */
	public com.chola.calendar.service.EmpInfoEntityLocalService getEmpInfoEntityLocalService() {
		return empInfoEntityLocalService;
	}

	/**
	 * Sets the emp info entity local service.
	 *
	 * @param empInfoEntityLocalService the emp info entity local service
	 */
	public void setEmpInfoEntityLocalService(
		com.chola.calendar.service.EmpInfoEntityLocalService empInfoEntityLocalService) {
		this.empInfoEntityLocalService = empInfoEntityLocalService;
	}

	/**
	 * Returns the emp info entity remote service.
	 *
	 * @return the emp info entity remote service
	 */
	public EmpInfoEntityService getEmpInfoEntityService() {
		return empInfoEntityService;
	}

	/**
	 * Sets the emp info entity remote service.
	 *
	 * @param empInfoEntityService the emp info entity remote service
	 */
	public void setEmpInfoEntityService(
		EmpInfoEntityService empInfoEntityService) {
		this.empInfoEntityService = empInfoEntityService;
	}

	/**
	 * Returns the emp info entity persistence.
	 *
	 * @return the emp info entity persistence
	 */
	public EmpInfoEntityPersistence getEmpInfoEntityPersistence() {
		return empInfoEntityPersistence;
	}

	/**
	 * Sets the emp info entity persistence.
	 *
	 * @param empInfoEntityPersistence the emp info entity persistence
	 */
	public void setEmpInfoEntityPersistence(
		EmpInfoEntityPersistence empInfoEntityPersistence) {
		this.empInfoEntityPersistence = empInfoEntityPersistence;
	}

	/**
	 * Returns the eventcalendar local service.
	 *
	 * @return the eventcalendar local service
	 */
	public com.chola.calendar.service.eventcalendarLocalService geteventcalendarLocalService() {
		return eventcalendarLocalService;
	}

	/**
	 * Sets the eventcalendar local service.
	 *
	 * @param eventcalendarLocalService the eventcalendar local service
	 */
	public void seteventcalendarLocalService(
		com.chola.calendar.service.eventcalendarLocalService eventcalendarLocalService) {
		this.eventcalendarLocalService = eventcalendarLocalService;
	}

	/**
	 * Returns the eventcalendar remote service.
	 *
	 * @return the eventcalendar remote service
	 */
	public com.chola.calendar.service.eventcalendarService geteventcalendarService() {
		return eventcalendarService;
	}

	/**
	 * Sets the eventcalendar remote service.
	 *
	 * @param eventcalendarService the eventcalendar remote service
	 */
	public void seteventcalendarService(
		com.chola.calendar.service.eventcalendarService eventcalendarService) {
		this.eventcalendarService = eventcalendarService;
	}

	/**
	 * Returns the eventcalendar persistence.
	 *
	 * @return the eventcalendar persistence
	 */
	public eventcalendarPersistence geteventcalendarPersistence() {
		return eventcalendarPersistence;
	}

	/**
	 * Sets the eventcalendar persistence.
	 *
	 * @param eventcalendarPersistence the eventcalendar persistence
	 */
	public void seteventcalendarPersistence(
		eventcalendarPersistence eventcalendarPersistence) {
		this.eventcalendarPersistence = eventcalendarPersistence;
	}

	/**
	 * Returns the eventcalendar finder.
	 *
	 * @return the eventcalendar finder
	 */
	public eventcalendarFinder geteventcalendarFinder() {
		return eventcalendarFinder;
	}

	/**
	 * Sets the eventcalendar finder.
	 *
	 * @param eventcalendarFinder the eventcalendar finder
	 */
	public void seteventcalendarFinder(eventcalendarFinder eventcalendarFinder) {
		this.eventcalendarFinder = eventcalendarFinder;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return EmpInfoEntityService.class.getName();
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return EmpInfoEntity.class;
	}

	protected String getModelClassName() {
		return EmpInfoEntity.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = empInfoEntityPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.chola.calendar.service.dataLocalService.class)
	protected com.chola.calendar.service.dataLocalService dataLocalService;
	@BeanReference(type = com.chola.calendar.service.dataService.class)
	protected com.chola.calendar.service.dataService dataService;
	@BeanReference(type = dataPersistence.class)
	protected dataPersistence dataPersistence;
	@BeanReference(type = com.chola.calendar.service.EmpInfoEntityLocalService.class)
	protected com.chola.calendar.service.EmpInfoEntityLocalService empInfoEntityLocalService;
	@BeanReference(type = EmpInfoEntityService.class)
	protected EmpInfoEntityService empInfoEntityService;
	@BeanReference(type = EmpInfoEntityPersistence.class)
	protected EmpInfoEntityPersistence empInfoEntityPersistence;
	@BeanReference(type = com.chola.calendar.service.eventcalendarLocalService.class)
	protected com.chola.calendar.service.eventcalendarLocalService eventcalendarLocalService;
	@BeanReference(type = com.chola.calendar.service.eventcalendarService.class)
	protected com.chola.calendar.service.eventcalendarService eventcalendarService;
	@BeanReference(type = eventcalendarPersistence.class)
	protected eventcalendarPersistence eventcalendarPersistence;
	@BeanReference(type = eventcalendarFinder.class)
	protected eventcalendarFinder eventcalendarFinder;
	@BeanReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@BeanReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private ClassLoader _classLoader;
	private EmpInfoEntityServiceClpInvoker _clpInvoker = new EmpInfoEntityServiceClpInvoker();
}