package com.chola.InternalJobRef.Action;

import java.io.IOException;
import java.util.Date;

import javax.portlet.ActionRequest;
import javax.portlet.ActionResponse;
import javax.portlet.PortletException;

import com.chola.InternalJobRef.model.InternalReference;
import com.chola.InternalJobRef.service.InternalReferenceLocalServiceUtil;
import com.liferay.counter.kernel.service.CounterLocalServiceUtil;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactoryUtil;
import com.liferay.portal.kernel.portlet.bridges.mvc.MVCPortlet;
import com.liferay.portal.kernel.util.ParamUtil;
import com.liferay.portal.kernel.util.Validator;

public class InternalReferenceMainAction extends MVCPortlet {
	private static Log _log = LogFactoryUtil.getLog(InternalReferenceMainAction.class);
	
	public void submitRefferal(ActionRequest request, ActionResponse response) {
		String Title = request.getParameter("Title");
		_log.info("Title :" + Title);
		String From = request.getParameter("From");
		_log.info("Title :" + From);
		String To = request.getParameter("To");
		_log.info("To :" + To);
		String Body = request.getParameter("Body");
		_log.info("Body :" + Body);
		long referenceId = ParamUtil.getInteger(request, "referenceId");
		_log.info("referenceId==========" + referenceId);
		if (referenceId >= 01) {
			modifiedinternalref(request, response, referenceId, Title, From, To, Body);
			response.setRenderParameter("jspPage", "/html/edit.jsp");
		} else {

			// refferal
			// ref=refferalLocalServiceUtil.createrefferal(CounterLocalServiceUtil.increment());
			InternalReference ref = InternalReferenceLocalServiceUtil
					.createInternalReference(CounterLocalServiceUtil.increment());
			ref.setBody(Body);
			ref.setFrom(From);
			ref.setFlag(1);
			ref.setTitle(Title);
			ref.setTo(To);
			ref.setCreateDate(new Date());
			ref = InternalReferenceLocalServiceUtil.addInternalReference(ref);
		}

	}

	private void modifiedinternalref(ActionRequest request, ActionResponse response, long referenceId, String title,
			String from, String to, String body) {
		// TODO Auto-generated method stub
		_log.info("edit the forms======");

		_log.info("referenceId====" + referenceId);
		InternalReference ref = null;
		try {
			ref = InternalReferenceLocalServiceUtil.fetchInternalReference(referenceId);
			_log.info("!!!!!!" + ref);
		} catch (SystemException e) {
			// TODO Auto-generated catch block
			_log.error(e.getMessage());
		}
		if (Validator.isNotNull(ref)) {
			ref.setBody(body);
			ref.setFrom(from);
			ref.setFlag(1);
			ref.setTitle(title);
			ref.setTo(to);
			try {

				InternalReferenceLocalServiceUtil.updateInternalReference(ref);
				_log.info("Your Updated Successfully");
			} catch (SystemException e) {
				// TODO Auto-generated catch block
				_log.error(e.getMessage());
			}
		}
	}

	public void deletereference(ActionRequest actionRequest, ActionResponse actionResponse)
			throws IOException, PortletException {
		_log.info("Delete Vendor======");
		long referenceId = ParamUtil.getInteger(actionRequest, "referenceId");
		_log.info("referenceId===" + referenceId);
		if (referenceId >= 01) {

			try {
				InternalReferenceLocalServiceUtil.deleteInternalReference(referenceId);
				_log.info("your deleted successfully");
				actionResponse.setRenderParameter("jspPage", "/html/edit.jsp");

			} catch (PortalException e) {
				// TODO Auto-generated catch block
				_log.error(e.getMessage());
			} catch (SystemException e) {
				// TODO Auto-generated catch block
				_log.error(e.getMessage());
			}

		}

	}
	public void addComment(ActionRequest actionRequest, ActionResponse actionResponse) {
		_log.info("Comment=======");

		try {
			invokeTaglibDiscussion(actionRequest, actionResponse);
			_log.info("Comment added Successfully..............");
		} catch (Exception e) {
			_log.error(e.getMessage());
		}
	}
	
	
}
