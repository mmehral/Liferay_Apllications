/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.chola.topsearch.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.chola.topsearch.model.TopSearch;
import com.chola.topsearch.model.TopSearchModel;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the TopSearch service. Represents a row in the &quot;master_TopSearch&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link TopSearchModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TopSearchImpl}.
 * </p>
 *
 * @author adms.java1
 * @see TopSearchImpl
 * @see TopSearch
 * @see TopSearchModel
 * @generated
 */
@ProviderType
public class TopSearchModelImpl extends BaseModelImpl<TopSearch>
	implements TopSearchModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a top search model instance should use the {@link TopSearch} interface instead.
	 */
	public static final String TABLE_NAME = "master_TopSearch";
	public static final Object[][] TABLE_COLUMNS = {
			{ "srchId", Types.BIGINT },
			{ "Name", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("srchId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("Name", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table master_TopSearch (srchId LONG not null primary key,Name VARCHAR(75) null,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table master_TopSearch";
	public static final String ORDER_BY_JPQL = " ORDER BY topSearch.srchId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY master_TopSearch.srchId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.chola.topsearch.model.TopSearch"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.chola.topsearch.model.TopSearch"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.chola.topsearch.model.TopSearch"));

	public TopSearchModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _srchId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSrchId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _srchId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TopSearch.class;
	}

	@Override
	public String getModelClassName() {
		return TopSearch.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("srchId", getSrchId());
		attributes.put("Name", getName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long srchId = (Long)attributes.get("srchId");

		if (srchId != null) {
			setSrchId(srchId);
		}

		String Name = (String)attributes.get("Name");

		if (Name != null) {
			setName(Name);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public long getSrchId() {
		return _srchId;
	}

	@Override
	public void setSrchId(long srchId) {
		_srchId = srchId;
	}

	@Override
	public String getName() {
		if (_Name == null) {
			return StringPool.BLANK;
		}
		else {
			return _Name;
		}
	}

	@Override
	public void setName(String Name) {
		_Name = Name;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			TopSearch.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TopSearch toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (TopSearch)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TopSearchImpl topSearchImpl = new TopSearchImpl();

		topSearchImpl.setSrchId(getSrchId());
		topSearchImpl.setName(getName());
		topSearchImpl.setCreateDate(getCreateDate());
		topSearchImpl.setModifiedDate(getModifiedDate());

		topSearchImpl.resetOriginalValues();

		return topSearchImpl;
	}

	@Override
	public int compareTo(TopSearch topSearch) {
		long primaryKey = topSearch.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof TopSearch)) {
			return false;
		}

		TopSearch topSearch = (TopSearch)obj;

		long primaryKey = topSearch.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		TopSearchModelImpl topSearchModelImpl = this;

		topSearchModelImpl._setModifiedDate = false;
	}

	@Override
	public CacheModel<TopSearch> toCacheModel() {
		TopSearchCacheModel topSearchCacheModel = new TopSearchCacheModel();

		topSearchCacheModel.srchId = getSrchId();

		topSearchCacheModel.Name = getName();

		String Name = topSearchCacheModel.Name;

		if ((Name != null) && (Name.length() == 0)) {
			topSearchCacheModel.Name = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			topSearchCacheModel.createDate = createDate.getTime();
		}
		else {
			topSearchCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			topSearchCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			topSearchCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return topSearchCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{srchId=");
		sb.append(getSrchId());
		sb.append(", Name=");
		sb.append(getName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.chola.topsearch.model.TopSearch");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>srchId</column-name><column-value><![CDATA[");
		sb.append(getSrchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = TopSearch.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			TopSearch.class
		};
	private long _srchId;
	private String _Name;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private TopSearch _escapedModel;
}