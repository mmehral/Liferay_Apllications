/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.service.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the newhire service. Represents a row in the &quot;cholawelcome_newhire&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.service.model.impl.newhireModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.service.model.impl.newhireImpl}.
 * </p>
 *
 * @author adms.java1
 * @see newhire
 * @see com.service.model.impl.newhireImpl
 * @see com.service.model.impl.newhireModelImpl
 * @generated
 */
@ProviderType
public interface newhireModel extends BaseModel<newhire> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a newhire model instance should use the {@link newhire} interface instead.
	 */

	/**
	 * Returns the primary key of this newhire.
	 *
	 * @return the primary key of this newhire
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this newhire.
	 *
	 * @param primaryKey the primary key of this newhire
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the newhire_id of this newhire.
	 *
	 * @return the newhire_id of this newhire
	 */
	public long getNewhire_id();

	/**
	 * Sets the newhire_id of this newhire.
	 *
	 * @param newhire_id the newhire_id of this newhire
	 */
	public void setNewhire_id(long newhire_id);

	/**
	 * Returns the newhire_name of this newhire.
	 *
	 * @return the newhire_name of this newhire
	 */
	@AutoEscape
	public String getNewhire_name();

	/**
	 * Sets the newhire_name of this newhire.
	 *
	 * @param newhire_name the newhire_name of this newhire
	 */
	public void setNewhire_name(String newhire_name);

	/**
	 * Returns the newhire_designation of this newhire.
	 *
	 * @return the newhire_designation of this newhire
	 */
	@AutoEscape
	public String getNewhire_designation();

	/**
	 * Sets the newhire_designation of this newhire.
	 *
	 * @param newhire_designation the newhire_designation of this newhire
	 */
	public void setNewhire_designation(String newhire_designation);

	/**
	 * Returns the newhire_profileimage of this newhire.
	 *
	 * @return the newhire_profileimage of this newhire
	 */
	@AutoEscape
	public String getNewhire_profileimage();

	/**
	 * Sets the newhire_profileimage of this newhire.
	 *
	 * @param newhire_profileimage the newhire_profileimage of this newhire
	 */
	public void setNewhire_profileimage(String newhire_profileimage);

	/**
	 * Returns the newhire_profileimage_path of this newhire.
	 *
	 * @return the newhire_profileimage_path of this newhire
	 */
	@AutoEscape
	public String getNewhire_profileimage_path();

	/**
	 * Sets the newhire_profileimage_path of this newhire.
	 *
	 * @param newhire_profileimage_path the newhire_profileimage_path of this newhire
	 */
	public void setNewhire_profileimage_path(String newhire_profileimage_path);

	/**
	 * Returns the newhire_detailedimage of this newhire.
	 *
	 * @return the newhire_detailedimage of this newhire
	 */
	@AutoEscape
	public String getNewhire_detailedimage();

	/**
	 * Sets the newhire_detailedimage of this newhire.
	 *
	 * @param newhire_detailedimage the newhire_detailedimage of this newhire
	 */
	public void setNewhire_detailedimage(String newhire_detailedimage);

	/**
	 * Returns the newhire_detailedimage_path of this newhire.
	 *
	 * @return the newhire_detailedimage_path of this newhire
	 */
	@AutoEscape
	public String getNewhire_detailedimage_path();

	/**
	 * Sets the newhire_detailedimage_path of this newhire.
	 *
	 * @param newhire_detailedimage_path the newhire_detailedimage_path of this newhire
	 */
	public void setNewhire_detailedimage_path(String newhire_detailedimage_path);

	/**
	 * Returns the newhire_createdate of this newhire.
	 *
	 * @return the newhire_createdate of this newhire
	 */
	public Date getNewhire_createdate();

	/**
	 * Sets the newhire_createdate of this newhire.
	 *
	 * @param newhire_createdate the newhire_createdate of this newhire
	 */
	public void setNewhire_createdate(Date newhire_createdate);

	/**
	 * Returns the newhire_modifieddate of this newhire.
	 *
	 * @return the newhire_modifieddate of this newhire
	 */
	public Date getNewhire_modifieddate();

	/**
	 * Sets the newhire_modifieddate of this newhire.
	 *
	 * @param newhire_modifieddate the newhire_modifieddate of this newhire
	 */
	public void setNewhire_modifieddate(Date newhire_modifieddate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.service.model.newhire newhire);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.service.model.newhire> toCacheModel();

	@Override
	public com.service.model.newhire toEscapedModel();

	@Override
	public com.service.model.newhire toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}