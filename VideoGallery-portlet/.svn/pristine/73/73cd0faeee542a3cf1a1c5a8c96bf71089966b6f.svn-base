package com.chola.videogallery;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.portlet.ActionRequest;
import javax.portlet.ActionResponse;

import com.chola.videogallery.model.videogallerypath;
import com.chola.videogallery.service.videogallerypathLocalServiceUtil;
import com.chola.videogallery.model.videogallery;
import com.chola.videogallery.model.videogallerypath;
import com.chola.videogallery.service.videogalleryLocalService;
import com.chola.videogallery.service.videogalleryLocalServiceUtil;
import com.chola.videogallery.service.videogallerypathLocalServiceUtil;
import com.liferay.counter.kernel.service.CounterLocalServiceUtil;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.portlet.bridges.mvc.MVCPortlet;
import com.liferay.portal.kernel.theme.ThemeDisplay;
import com.liferay.portal.kernel.upload.UploadPortletRequest;
import com.liferay.portal.kernel.util.FileUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.WebKeys;

public class VideoGallerybackup extends MVCPortlet{

	public void updateImageDetails(ActionRequest request,ActionResponse response) throws NumberFormatException, PortalException
	{
		ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY);
		
		String id = request.getParameter("id");
		System.out.println("ID : "+id);
		
		String videoTitle = request.getParameter("videoTitle");
		System.out.println("videoTitle : "+videoTitle);
		
		String videoDesc = request.getParameter("videoDesc");
		System.out.println("videoDesc : "+videoDesc);
		
		videogallerypath path = videogallerypathLocalServiceUtil.getvideogallerypath(Long.parseLong(id));
		path.setVideoTitle(videoTitle);
		path.setVideoDesc(videoDesc);
		path.setUpdatedBy(String.valueOf(themeDisplay.getUserId()));
		path.setUpdatedDate(new Date());
		path = videogallerypathLocalServiceUtil.updatevideogallerypath(path);
		
		System.out.println("Successfully Updated");
	}
	
	public void updateDetails(ActionRequest request,ActionResponse response) throws NumberFormatException, PortalException
	{
		System.out.println("Inside Update Method");
		
		String id = request.getParameter("id");
		System.out.println("ID : "+id);
		
		String albumName = request.getParameter("albumName");
		System.out.println("albumName : "+albumName);
		
		String albumDesc = request.getParameter("albumDesc");
		System.out.println("albumDesc : "+albumDesc);
		
		videogallery img = videogalleryLocalServiceUtil.fetchvideogallery(Long.parseLong(id));
		img.setAlbumName(albumName);
		img.setAlbumDesc(albumDesc);
		img = videogalleryLocalServiceUtil.updatevideogallery(img);
		
		System.out.println("Updated ID : "+img.getId());
		
	}
	public void removeAlbum(ActionRequest request,ActionResponse response)
	{
		System.out.println("Inside Remove Method");
		
		String albumSelect = request.getParameter("albumSelect");
		System.out.println("albumSelect : "+albumSelect);
		
		videogallery videoGal = videogalleryLocalServiceUtil.fetchvideogallery(Long.parseLong(albumSelect));
		videoGal.setFlag("2");
		videoGal = videogalleryLocalServiceUtil.updatevideogallery(videoGal);
		
		System.out.println("Removed Successfully : "+videoGal.getId());
	}
	
	public String fileUpload(ActionRequest request, ActionResponse response,UploadPortletRequest uploadRequest,String fileName,File sourceFile) throws IOException
	{
		ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY);
		//String fileName = null;
		//UploadPortletRequest uploadRequest = PortalUtil.getUploadPortletRequest(request);
	    //Creating the folder Structure in Tomcat as WebApps/videoGalleryUpload/userId folder will create

	    String str = "videoGalleryUpload";

		long userId = themeDisplay.getUserId();
		java.util.Properties properties = PortalUtil.getPortalProperties();
		System.out.println("my properties is...." + properties);
		File contestfolder = new File(properties.getProperty("liferay.home") + "/tomcat-8.0.32/webapps/" + str);
		File destinationFile = new File(
				properties.getProperty("liferay.home") + "/tomcat-8.0.32/webapps/" + str + "/" + userId);

		if (!contestfolder.exists()) {
			destinationFile.mkdirs();
			System.out.println("type directory exists");
		}
		System.out.println("my directory is : " + contestfolder);

		if (!destinationFile.exists()) {
			destinationFile.mkdirs();
			System.out.println("type directory exists");
		}
		System.out.println("my directory is : " + destinationFile);
		
				
				
		//File sourceFile = uploadRequest.getFile("uploadedFile");
		//fileName = uploadRequest.getFileName("uploadedFile");
			
		if(fileName!=null){
				/**************** SAVE THE DOC ********************************/
			if (destinationFile.exists()) {
				fileName.lastIndexOf(".");
				String fileNa = fileName.substring(0,fileName.lastIndexOf("."));
				System.out.println("fileName : " + fileNa);
				String fileExtension = fileName.substring(fileName.lastIndexOf("."), fileName.length());
				System.out.println("fileExtension : "+ fileExtension);
				fileName = fileNa;
				SimpleDateFormat df2 = new SimpleDateFormat("dd_MM_yyyy_HH_mm_ss");
				Date date = new Date();
				String testDateString = df2.format(date);
				fileName = fileName +"_"+testDateString +fileExtension;

				destinationFile = new File(
						properties.getProperty("liferay.home") + "/tomcat-8.0.32/webapps/" + str + "/" + userId + "/" + fileName);

				System.out.println("destinationFile : " + destinationFile);

			}
			System.out.println("File : " + fileName);
			FileUtil.copyFile(sourceFile, destinationFile);
			
			
			String FilePath = destinationFile.toString();
			System.out.println("Successfully Saved the Document");
			/*************** ENDED THE SAVING ******************/
			System.out.println(FilePath);
	}
		return fileName;
	}
	
public void uploadData(ActionRequest request, ActionResponse response) throws PortalException, IOException {
		
	
		ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY);
		
		String albumName = request.getParameter("albumName");
		System.out.println("albumName : "+albumName);
		
		String albumDesc = request.getParameter("albumDesc");
		System.out.println("albumDesc : "+albumDesc);
		
		UploadPortletRequest uploadPortletRequest = PortalUtil.getUploadPortletRequest(request);
		String[] sourceFileName = uploadPortletRequest.getFileNames("uploadedFile");
		File[] sourceFile = uploadPortletRequest.getFiles("uploadedFile");
		SimpleDateFormat df2 = new SimpleDateFormat("ddMMyyyyHHmmss");
		Date date = new Date();
		String albumId = df2.format(date);
		
		videogallerypath path = null;
		for(int i=0;i<sourceFileName.length;i++)
		{
		System.out.println("File Name : "+sourceFileName[i].toString());
		
		String fileName=null;
		if(!sourceFileName[i].equalsIgnoreCase(""))
		{
			System.out.println("File selected by user");
			fileName = fileUpload(request,response,uploadPortletRequest,sourceFileName[i],sourceFile[i]);
		}
		else
		{
			System.out.println("File not selected by user");
		}
		
		path = videogallerypathLocalServiceUtil.createvideogallerypath(CounterLocalServiceUtil.increment());
		path.setAlbumVideoPath(fileName.toString());
		path.setCreatedBy(String.valueOf(themeDisplay.getUserId()));
		path.setCreatedDate(date);
		path.setFlag("1");
		path.setAlbumId(albumId);
		path = videogallerypathLocalServiceUtil.addvideogallerypath(path);
		
		}
		
		videogallery imgGallery = videogalleryLocalServiceUtil.createvideogallery(CounterLocalServiceUtil.increment());
		imgGallery.setAlbumName(albumName);
		imgGallery.setAlbumDesc(albumDesc);
		imgGallery.setAlbumId(path.getAlbumId());
		imgGallery.setCreatedBy(String.valueOf(themeDisplay.getUserId()));
		imgGallery.setCreatedDate(date);
		imgGallery.setFlag("1");
		
		imgGallery = videogalleryLocalServiceUtil.addvideogallery(imgGallery);
		
		System.out.println("video Gallery Created with ID : "+imgGallery.getId());
}
}
