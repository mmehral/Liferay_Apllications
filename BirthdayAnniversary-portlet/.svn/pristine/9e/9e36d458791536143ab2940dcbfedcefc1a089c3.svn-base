/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.chola.birthday.service.base;

import com.chola.birthday.model.predefinedmessages;
import com.chola.birthday.service.persistence.birthdaywishFinder;
import com.chola.birthday.service.persistence.birthdaywishPersistence;
import com.chola.birthday.service.persistence.predefinedmessagesPersistence;
import com.chola.birthday.service.predefinedmessagesService;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the predefinedmessages remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.chola.birthday.service.impl.predefinedmessagesServiceImpl}.
 * </p>
 *
 * @author CloverLiferay02
 * @see com.chola.birthday.service.impl.predefinedmessagesServiceImpl
 * @see com.chola.birthday.service.predefinedmessagesServiceUtil
 * @generated
 */
public abstract class predefinedmessagesServiceBaseImpl extends BaseServiceImpl
	implements predefinedmessagesService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.chola.birthday.service.predefinedmessagesServiceUtil} to access the predefinedmessages remote service.
	 */

	/**
	 * Returns the birthdaywish local service.
	 *
	 * @return the birthdaywish local service
	 */
	public com.chola.birthday.service.birthdaywishLocalService getbirthdaywishLocalService() {
		return birthdaywishLocalService;
	}

	/**
	 * Sets the birthdaywish local service.
	 *
	 * @param birthdaywishLocalService the birthdaywish local service
	 */
	public void setbirthdaywishLocalService(
		com.chola.birthday.service.birthdaywishLocalService birthdaywishLocalService) {
		this.birthdaywishLocalService = birthdaywishLocalService;
	}

	/**
	 * Returns the birthdaywish remote service.
	 *
	 * @return the birthdaywish remote service
	 */
	public com.chola.birthday.service.birthdaywishService getbirthdaywishService() {
		return birthdaywishService;
	}

	/**
	 * Sets the birthdaywish remote service.
	 *
	 * @param birthdaywishService the birthdaywish remote service
	 */
	public void setbirthdaywishService(
		com.chola.birthday.service.birthdaywishService birthdaywishService) {
		this.birthdaywishService = birthdaywishService;
	}

	/**
	 * Returns the birthdaywish persistence.
	 *
	 * @return the birthdaywish persistence
	 */
	public birthdaywishPersistence getbirthdaywishPersistence() {
		return birthdaywishPersistence;
	}

	/**
	 * Sets the birthdaywish persistence.
	 *
	 * @param birthdaywishPersistence the birthdaywish persistence
	 */
	public void setbirthdaywishPersistence(
		birthdaywishPersistence birthdaywishPersistence) {
		this.birthdaywishPersistence = birthdaywishPersistence;
	}

	/**
	 * Returns the birthdaywish finder.
	 *
	 * @return the birthdaywish finder
	 */
	public birthdaywishFinder getbirthdaywishFinder() {
		return birthdaywishFinder;
	}

	/**
	 * Sets the birthdaywish finder.
	 *
	 * @param birthdaywishFinder the birthdaywish finder
	 */
	public void setbirthdaywishFinder(birthdaywishFinder birthdaywishFinder) {
		this.birthdaywishFinder = birthdaywishFinder;
	}

	/**
	 * Returns the predefinedmessages local service.
	 *
	 * @return the predefinedmessages local service
	 */
	public com.chola.birthday.service.predefinedmessagesLocalService getpredefinedmessagesLocalService() {
		return predefinedmessagesLocalService;
	}

	/**
	 * Sets the predefinedmessages local service.
	 *
	 * @param predefinedmessagesLocalService the predefinedmessages local service
	 */
	public void setpredefinedmessagesLocalService(
		com.chola.birthday.service.predefinedmessagesLocalService predefinedmessagesLocalService) {
		this.predefinedmessagesLocalService = predefinedmessagesLocalService;
	}

	/**
	 * Returns the predefinedmessages remote service.
	 *
	 * @return the predefinedmessages remote service
	 */
	public predefinedmessagesService getpredefinedmessagesService() {
		return predefinedmessagesService;
	}

	/**
	 * Sets the predefinedmessages remote service.
	 *
	 * @param predefinedmessagesService the predefinedmessages remote service
	 */
	public void setpredefinedmessagesService(
		predefinedmessagesService predefinedmessagesService) {
		this.predefinedmessagesService = predefinedmessagesService;
	}

	/**
	 * Returns the predefinedmessages persistence.
	 *
	 * @return the predefinedmessages persistence
	 */
	public predefinedmessagesPersistence getpredefinedmessagesPersistence() {
		return predefinedmessagesPersistence;
	}

	/**
	 * Sets the predefinedmessages persistence.
	 *
	 * @param predefinedmessagesPersistence the predefinedmessages persistence
	 */
	public void setpredefinedmessagesPersistence(
		predefinedmessagesPersistence predefinedmessagesPersistence) {
		this.predefinedmessagesPersistence = predefinedmessagesPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return predefinedmessagesService.class.getName();
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return predefinedmessages.class;
	}

	protected String getModelClassName() {
		return predefinedmessages.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = predefinedmessagesPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.chola.birthday.service.birthdaywishLocalService.class)
	protected com.chola.birthday.service.birthdaywishLocalService birthdaywishLocalService;
	@BeanReference(type = com.chola.birthday.service.birthdaywishService.class)
	protected com.chola.birthday.service.birthdaywishService birthdaywishService;
	@BeanReference(type = birthdaywishPersistence.class)
	protected birthdaywishPersistence birthdaywishPersistence;
	@BeanReference(type = birthdaywishFinder.class)
	protected birthdaywishFinder birthdaywishFinder;
	@BeanReference(type = com.chola.birthday.service.predefinedmessagesLocalService.class)
	protected com.chola.birthday.service.predefinedmessagesLocalService predefinedmessagesLocalService;
	@BeanReference(type = predefinedmessagesService.class)
	protected predefinedmessagesService predefinedmessagesService;
	@BeanReference(type = predefinedmessagesPersistence.class)
	protected predefinedmessagesPersistence predefinedmessagesPersistence;
	@BeanReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@BeanReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private ClassLoader _classLoader;
	private predefinedmessagesServiceClpInvoker _clpInvoker = new predefinedmessagesServiceClpInvoker();
}