/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.chola.birthday.service.base;

import aQute.bnd.annotation.ProviderType;

import com.chola.birthday.model.birthdaywish;
import com.chola.birthday.service.birthdaywishLocalService;
import com.chola.birthday.service.persistence.birthdaywishFinder;
import com.chola.birthday.service.persistence.birthdaywishPersistence;
import com.chola.birthday.service.persistence.predefinedmessagesPersistence;

import com.liferay.asset.kernel.service.persistence.AssetEntryPersistence;
import com.liferay.asset.kernel.service.persistence.AssetLinkPersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.ActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DefaultActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.IndexableActionableDynamicQuery;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.model.PersistedModel;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.service.BaseLocalServiceImpl;
import com.liferay.portal.kernel.service.PersistedModelLocalServiceRegistryUtil;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.kernel.util.PortalUtil;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the birthdaywish local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.chola.birthday.service.impl.birthdaywishLocalServiceImpl}.
 * </p>
 *
 * @author CloverLiferay02
 * @see com.chola.birthday.service.impl.birthdaywishLocalServiceImpl
 * @see com.chola.birthday.service.birthdaywishLocalServiceUtil
 * @generated
 */
@ProviderType
public abstract class birthdaywishLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements birthdaywishLocalService,
		IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.chola.birthday.service.birthdaywishLocalServiceUtil} to access the birthdaywish local service.
	 */

	/**
	 * Adds the birthdaywish to the database. Also notifies the appropriate model listeners.
	 *
	 * @param birthdaywish the birthdaywish
	 * @return the birthdaywish that was added
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public birthdaywish addbirthdaywish(birthdaywish birthdaywish) {
		birthdaywish.setNew(true);

		return birthdaywishPersistence.update(birthdaywish);
	}

	/**
	 * Creates a new birthdaywish with the primary key. Does not add the birthdaywish to the database.
	 *
	 * @param id the primary key for the new birthdaywish
	 * @return the new birthdaywish
	 */
	@Override
	public birthdaywish createbirthdaywish(long id) {
		return birthdaywishPersistence.create(id);
	}

	/**
	 * Deletes the birthdaywish with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param id the primary key of the birthdaywish
	 * @return the birthdaywish that was removed
	 * @throws PortalException if a birthdaywish with the primary key could not be found
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public birthdaywish deletebirthdaywish(long id) throws PortalException {
		return birthdaywishPersistence.remove(id);
	}

	/**
	 * Deletes the birthdaywish from the database. Also notifies the appropriate model listeners.
	 *
	 * @param birthdaywish the birthdaywish
	 * @return the birthdaywish that was removed
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public birthdaywish deletebirthdaywish(birthdaywish birthdaywish) {
		return birthdaywishPersistence.remove(birthdaywish);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(birthdaywish.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery) {
		return birthdaywishPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.chola.birthday.model.impl.birthdaywishModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end) {
		return birthdaywishPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.chola.birthday.model.impl.birthdaywishModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 */
	@Override
	public <T> List<T> dynamicQuery(DynamicQuery dynamicQuery, int start,
		int end, OrderByComparator<T> orderByComparator) {
		return birthdaywishPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery) {
		return birthdaywishPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows matching the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows matching the dynamic query
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) {
		return birthdaywishPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public birthdaywish fetchbirthdaywish(long id) {
		return birthdaywishPersistence.fetchByPrimaryKey(id);
	}

	/**
	 * Returns the birthdaywish with the primary key.
	 *
	 * @param id the primary key of the birthdaywish
	 * @return the birthdaywish
	 * @throws PortalException if a birthdaywish with the primary key could not be found
	 */
	@Override
	public birthdaywish getbirthdaywish(long id) throws PortalException {
		return birthdaywishPersistence.findByPrimaryKey(id);
	}

	@Override
	public ActionableDynamicQuery getActionableDynamicQuery() {
		ActionableDynamicQuery actionableDynamicQuery = new DefaultActionableDynamicQuery();

		actionableDynamicQuery.setBaseLocalService(birthdaywishLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(birthdaywish.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("id");

		return actionableDynamicQuery;
	}

	@Override
	public IndexableActionableDynamicQuery getIndexableActionableDynamicQuery() {
		IndexableActionableDynamicQuery indexableActionableDynamicQuery = new IndexableActionableDynamicQuery();

		indexableActionableDynamicQuery.setBaseLocalService(birthdaywishLocalService);
		indexableActionableDynamicQuery.setClassLoader(getClassLoader());
		indexableActionableDynamicQuery.setModelClass(birthdaywish.class);

		indexableActionableDynamicQuery.setPrimaryKeyPropertyName("id");

		return indexableActionableDynamicQuery;
	}

	protected void initActionableDynamicQuery(
		ActionableDynamicQuery actionableDynamicQuery) {
		actionableDynamicQuery.setBaseLocalService(birthdaywishLocalService);
		actionableDynamicQuery.setClassLoader(getClassLoader());
		actionableDynamicQuery.setModelClass(birthdaywish.class);

		actionableDynamicQuery.setPrimaryKeyPropertyName("id");
	}

	/**
	 * @throws PortalException
	 */
	@Override
	public PersistedModel deletePersistedModel(PersistedModel persistedModel)
		throws PortalException {
		return birthdaywishLocalService.deletebirthdaywish((birthdaywish)persistedModel);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException {
		return birthdaywishPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the birthdaywishs.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.chola.birthday.model.impl.birthdaywishModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of birthdaywishs
	 * @param end the upper bound of the range of birthdaywishs (not inclusive)
	 * @return the range of birthdaywishs
	 */
	@Override
	public List<birthdaywish> getbirthdaywishs(int start, int end) {
		return birthdaywishPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of birthdaywishs.
	 *
	 * @return the number of birthdaywishs
	 */
	@Override
	public int getbirthdaywishsCount() {
		return birthdaywishPersistence.countAll();
	}

	/**
	 * Updates the birthdaywish in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param birthdaywish the birthdaywish
	 * @return the birthdaywish that was updated
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public birthdaywish updatebirthdaywish(birthdaywish birthdaywish) {
		return birthdaywishPersistence.update(birthdaywish);
	}

	/**
	 * Returns the birthdaywish local service.
	 *
	 * @return the birthdaywish local service
	 */
	public birthdaywishLocalService getbirthdaywishLocalService() {
		return birthdaywishLocalService;
	}

	/**
	 * Sets the birthdaywish local service.
	 *
	 * @param birthdaywishLocalService the birthdaywish local service
	 */
	public void setbirthdaywishLocalService(
		birthdaywishLocalService birthdaywishLocalService) {
		this.birthdaywishLocalService = birthdaywishLocalService;
	}

	/**
	 * Returns the birthdaywish persistence.
	 *
	 * @return the birthdaywish persistence
	 */
	public birthdaywishPersistence getbirthdaywishPersistence() {
		return birthdaywishPersistence;
	}

	/**
	 * Sets the birthdaywish persistence.
	 *
	 * @param birthdaywishPersistence the birthdaywish persistence
	 */
	public void setbirthdaywishPersistence(
		birthdaywishPersistence birthdaywishPersistence) {
		this.birthdaywishPersistence = birthdaywishPersistence;
	}

	/**
	 * Returns the birthdaywish finder.
	 *
	 * @return the birthdaywish finder
	 */
	public birthdaywishFinder getbirthdaywishFinder() {
		return birthdaywishFinder;
	}

	/**
	 * Sets the birthdaywish finder.
	 *
	 * @param birthdaywishFinder the birthdaywish finder
	 */
	public void setbirthdaywishFinder(birthdaywishFinder birthdaywishFinder) {
		this.birthdaywishFinder = birthdaywishFinder;
	}

	/**
	 * Returns the predefinedmessages local service.
	 *
	 * @return the predefinedmessages local service
	 */
	public com.chola.birthday.service.predefinedmessagesLocalService getpredefinedmessagesLocalService() {
		return predefinedmessagesLocalService;
	}

	/**
	 * Sets the predefinedmessages local service.
	 *
	 * @param predefinedmessagesLocalService the predefinedmessages local service
	 */
	public void setpredefinedmessagesLocalService(
		com.chola.birthday.service.predefinedmessagesLocalService predefinedmessagesLocalService) {
		this.predefinedmessagesLocalService = predefinedmessagesLocalService;
	}

	/**
	 * Returns the predefinedmessages persistence.
	 *
	 * @return the predefinedmessages persistence
	 */
	public predefinedmessagesPersistence getpredefinedmessagesPersistence() {
		return predefinedmessagesPersistence;
	}

	/**
	 * Sets the predefinedmessages persistence.
	 *
	 * @param predefinedmessagesPersistence the predefinedmessages persistence
	 */
	public void setpredefinedmessagesPersistence(
		predefinedmessagesPersistence predefinedmessagesPersistence) {
		this.predefinedmessagesPersistence = predefinedmessagesPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	/**
	 * Returns the asset entry local service.
	 *
	 * @return the asset entry local service
	 */
	public com.liferay.asset.kernel.service.AssetEntryLocalService getAssetEntryLocalService() {
		return assetEntryLocalService;
	}

	/**
	 * Sets the asset entry local service.
	 *
	 * @param assetEntryLocalService the asset entry local service
	 */
	public void setAssetEntryLocalService(
		com.liferay.asset.kernel.service.AssetEntryLocalService assetEntryLocalService) {
		this.assetEntryLocalService = assetEntryLocalService;
	}

	/**
	 * Returns the asset entry persistence.
	 *
	 * @return the asset entry persistence
	 */
	public AssetEntryPersistence getAssetEntryPersistence() {
		return assetEntryPersistence;
	}

	/**
	 * Sets the asset entry persistence.
	 *
	 * @param assetEntryPersistence the asset entry persistence
	 */
	public void setAssetEntryPersistence(
		AssetEntryPersistence assetEntryPersistence) {
		this.assetEntryPersistence = assetEntryPersistence;
	}

	/**
	 * Returns the asset link local service.
	 *
	 * @return the asset link local service
	 */
	public com.liferay.asset.kernel.service.AssetLinkLocalService getAssetLinkLocalService() {
		return assetLinkLocalService;
	}

	/**
	 * Sets the asset link local service.
	 *
	 * @param assetLinkLocalService the asset link local service
	 */
	public void setAssetLinkLocalService(
		com.liferay.asset.kernel.service.AssetLinkLocalService assetLinkLocalService) {
		this.assetLinkLocalService = assetLinkLocalService;
	}

	/**
	 * Returns the asset link persistence.
	 *
	 * @return the asset link persistence
	 */
	public AssetLinkPersistence getAssetLinkPersistence() {
		return assetLinkPersistence;
	}

	/**
	 * Sets the asset link persistence.
	 *
	 * @param assetLinkPersistence the asset link persistence
	 */
	public void setAssetLinkPersistence(
		AssetLinkPersistence assetLinkPersistence) {
		this.assetLinkPersistence = assetLinkPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();

		PersistedModelLocalServiceRegistryUtil.register("com.chola.birthday.model.birthdaywish",
			birthdaywishLocalService);
	}

	public void destroy() {
		PersistedModelLocalServiceRegistryUtil.unregister(
			"com.chola.birthday.model.birthdaywish");
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return birthdaywishLocalService.class.getName();
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return birthdaywish.class;
	}

	protected String getModelClassName() {
		return birthdaywish.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = birthdaywishPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = birthdaywishLocalService.class)
	protected birthdaywishLocalService birthdaywishLocalService;
	@BeanReference(type = birthdaywishPersistence.class)
	protected birthdaywishPersistence birthdaywishPersistence;
	@BeanReference(type = birthdaywishFinder.class)
	protected birthdaywishFinder birthdaywishFinder;
	@BeanReference(type = com.chola.birthday.service.predefinedmessagesLocalService.class)
	protected com.chola.birthday.service.predefinedmessagesLocalService predefinedmessagesLocalService;
	@BeanReference(type = predefinedmessagesPersistence.class)
	protected predefinedmessagesPersistence predefinedmessagesPersistence;
	@BeanReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@BeanReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	@BeanReference(type = com.liferay.asset.kernel.service.AssetEntryLocalService.class)
	protected com.liferay.asset.kernel.service.AssetEntryLocalService assetEntryLocalService;
	@BeanReference(type = AssetEntryPersistence.class)
	protected AssetEntryPersistence assetEntryPersistence;
	@BeanReference(type = com.liferay.asset.kernel.service.AssetLinkLocalService.class)
	protected com.liferay.asset.kernel.service.AssetLinkLocalService assetLinkLocalService;
	@BeanReference(type = AssetLinkPersistence.class)
	protected AssetLinkPersistence assetLinkPersistence;
	private ClassLoader _classLoader;
	private birthdaywishLocalServiceClpInvoker _clpInvoker = new birthdaywishLocalServiceClpInvoker();
}