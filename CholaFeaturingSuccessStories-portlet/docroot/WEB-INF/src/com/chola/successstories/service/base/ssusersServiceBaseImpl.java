/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.chola.successstories.service.base;

import com.chola.successstories.model.ssusers;
import com.chola.successstories.service.persistence.ssdetailsFinder;
import com.chola.successstories.service.persistence.ssdetailsPersistence;
import com.chola.successstories.service.persistence.sspathPersistence;
import com.chola.successstories.service.persistence.ssusersPersistence;
import com.chola.successstories.service.ssusersService;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the ssusers remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.chola.successstories.service.impl.ssusersServiceImpl}.
 * </p>
 *
 * @author cloverliferay01
 * @see com.chola.successstories.service.impl.ssusersServiceImpl
 * @see com.chola.successstories.service.ssusersServiceUtil
 * @generated
 */
public abstract class ssusersServiceBaseImpl extends BaseServiceImpl
	implements ssusersService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.chola.successstories.service.ssusersServiceUtil} to access the ssusers remote service.
	 */

	/**
	 * Returns the ssdetails local service.
	 *
	 * @return the ssdetails local service
	 */
	public com.chola.successstories.service.ssdetailsLocalService getssdetailsLocalService() {
		return ssdetailsLocalService;
	}

	/**
	 * Sets the ssdetails local service.
	 *
	 * @param ssdetailsLocalService the ssdetails local service
	 */
	public void setssdetailsLocalService(
		com.chola.successstories.service.ssdetailsLocalService ssdetailsLocalService) {
		this.ssdetailsLocalService = ssdetailsLocalService;
	}

	/**
	 * Returns the ssdetails remote service.
	 *
	 * @return the ssdetails remote service
	 */
	public com.chola.successstories.service.ssdetailsService getssdetailsService() {
		return ssdetailsService;
	}

	/**
	 * Sets the ssdetails remote service.
	 *
	 * @param ssdetailsService the ssdetails remote service
	 */
	public void setssdetailsService(
		com.chola.successstories.service.ssdetailsService ssdetailsService) {
		this.ssdetailsService = ssdetailsService;
	}

	/**
	 * Returns the ssdetails persistence.
	 *
	 * @return the ssdetails persistence
	 */
	public ssdetailsPersistence getssdetailsPersistence() {
		return ssdetailsPersistence;
	}

	/**
	 * Sets the ssdetails persistence.
	 *
	 * @param ssdetailsPersistence the ssdetails persistence
	 */
	public void setssdetailsPersistence(
		ssdetailsPersistence ssdetailsPersistence) {
		this.ssdetailsPersistence = ssdetailsPersistence;
	}

	/**
	 * Returns the ssdetails finder.
	 *
	 * @return the ssdetails finder
	 */
	public ssdetailsFinder getssdetailsFinder() {
		return ssdetailsFinder;
	}

	/**
	 * Sets the ssdetails finder.
	 *
	 * @param ssdetailsFinder the ssdetails finder
	 */
	public void setssdetailsFinder(ssdetailsFinder ssdetailsFinder) {
		this.ssdetailsFinder = ssdetailsFinder;
	}

	/**
	 * Returns the sspath local service.
	 *
	 * @return the sspath local service
	 */
	public com.chola.successstories.service.sspathLocalService getsspathLocalService() {
		return sspathLocalService;
	}

	/**
	 * Sets the sspath local service.
	 *
	 * @param sspathLocalService the sspath local service
	 */
	public void setsspathLocalService(
		com.chola.successstories.service.sspathLocalService sspathLocalService) {
		this.sspathLocalService = sspathLocalService;
	}

	/**
	 * Returns the sspath remote service.
	 *
	 * @return the sspath remote service
	 */
	public com.chola.successstories.service.sspathService getsspathService() {
		return sspathService;
	}

	/**
	 * Sets the sspath remote service.
	 *
	 * @param sspathService the sspath remote service
	 */
	public void setsspathService(
		com.chola.successstories.service.sspathService sspathService) {
		this.sspathService = sspathService;
	}

	/**
	 * Returns the sspath persistence.
	 *
	 * @return the sspath persistence
	 */
	public sspathPersistence getsspathPersistence() {
		return sspathPersistence;
	}

	/**
	 * Sets the sspath persistence.
	 *
	 * @param sspathPersistence the sspath persistence
	 */
	public void setsspathPersistence(sspathPersistence sspathPersistence) {
		this.sspathPersistence = sspathPersistence;
	}

	/**
	 * Returns the ssusers local service.
	 *
	 * @return the ssusers local service
	 */
	public com.chola.successstories.service.ssusersLocalService getssusersLocalService() {
		return ssusersLocalService;
	}

	/**
	 * Sets the ssusers local service.
	 *
	 * @param ssusersLocalService the ssusers local service
	 */
	public void setssusersLocalService(
		com.chola.successstories.service.ssusersLocalService ssusersLocalService) {
		this.ssusersLocalService = ssusersLocalService;
	}

	/**
	 * Returns the ssusers remote service.
	 *
	 * @return the ssusers remote service
	 */
	public ssusersService getssusersService() {
		return ssusersService;
	}

	/**
	 * Sets the ssusers remote service.
	 *
	 * @param ssusersService the ssusers remote service
	 */
	public void setssusersService(ssusersService ssusersService) {
		this.ssusersService = ssusersService;
	}

	/**
	 * Returns the ssusers persistence.
	 *
	 * @return the ssusers persistence
	 */
	public ssusersPersistence getssusersPersistence() {
		return ssusersPersistence;
	}

	/**
	 * Sets the ssusers persistence.
	 *
	 * @param ssusersPersistence the ssusers persistence
	 */
	public void setssusersPersistence(ssusersPersistence ssusersPersistence) {
		this.ssusersPersistence = ssusersPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return ssusersService.class.getName();
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return ssusers.class;
	}

	protected String getModelClassName() {
		return ssusers.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = ssusersPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.chola.successstories.service.ssdetailsLocalService.class)
	protected com.chola.successstories.service.ssdetailsLocalService ssdetailsLocalService;
	@BeanReference(type = com.chola.successstories.service.ssdetailsService.class)
	protected com.chola.successstories.service.ssdetailsService ssdetailsService;
	@BeanReference(type = ssdetailsPersistence.class)
	protected ssdetailsPersistence ssdetailsPersistence;
	@BeanReference(type = ssdetailsFinder.class)
	protected ssdetailsFinder ssdetailsFinder;
	@BeanReference(type = com.chola.successstories.service.sspathLocalService.class)
	protected com.chola.successstories.service.sspathLocalService sspathLocalService;
	@BeanReference(type = com.chola.successstories.service.sspathService.class)
	protected com.chola.successstories.service.sspathService sspathService;
	@BeanReference(type = sspathPersistence.class)
	protected sspathPersistence sspathPersistence;
	@BeanReference(type = com.chola.successstories.service.ssusersLocalService.class)
	protected com.chola.successstories.service.ssusersLocalService ssusersLocalService;
	@BeanReference(type = ssusersService.class)
	protected ssusersService ssusersService;
	@BeanReference(type = ssusersPersistence.class)
	protected ssusersPersistence ssusersPersistence;
	@BeanReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@BeanReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private ClassLoader _classLoader;
	private ssusersServiceClpInvoker _clpInvoker = new ssusersServiceClpInvoker();
}