/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.chola.swagatam.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.chola.swagatam.model.swagatam;
import com.chola.swagatam.model.swagatamModel;
import com.chola.swagatam.model.swagatamSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the swagatam service. Represents a row in the &quot;cholas_swagatam&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link swagatamModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link swagatamImpl}.
 * </p>
 *
 * @author CloverLiferay02
 * @see swagatamImpl
 * @see swagatam
 * @see swagatamModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class swagatamModelImpl extends BaseModelImpl<swagatam>
	implements swagatamModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a swagatam model instance should use the {@link swagatam} interface instead.
	 */
	public static final String TABLE_NAME = "cholas_swagatam";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "inductionid", Types.VARCHAR },
			{ "title", Types.VARCHAR },
			{ "desc_", Types.VARCHAR },
			{ "createdDate", Types.TIMESTAMP },
			{ "createdBy", Types.VARCHAR },
			{ "flag", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("inductionid", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("title", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("desc_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createdDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("createdBy", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("flag", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table cholas_swagatam (id_ LONG not null primary key,inductionid VARCHAR(75) null,title VARCHAR(200) null,desc_ VARCHAR(500) null,createdDate DATE null,createdBy VARCHAR(75) null,flag VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table cholas_swagatam";
	public static final String ORDER_BY_JPQL = " ORDER BY swagatam.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY cholas_swagatam.id_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.chola.swagatam.model.swagatam"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.chola.swagatam.model.swagatam"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static swagatam toModel(swagatamSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		swagatam model = new swagatamImpl();

		model.setId(soapModel.getId());
		model.setInductionid(soapModel.getInductionid());
		model.setTitle(soapModel.getTitle());
		model.setDesc(soapModel.getDesc());
		model.setCreatedDate(soapModel.getCreatedDate());
		model.setCreatedBy(soapModel.getCreatedBy());
		model.setFlag(soapModel.getFlag());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<swagatam> toModels(swagatamSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<swagatam> models = new ArrayList<swagatam>(soapModels.length);

		for (swagatamSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.chola.swagatam.model.swagatam"));

	public swagatamModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return swagatam.class;
	}

	@Override
	public String getModelClassName() {
		return swagatam.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("inductionid", getInductionid());
		attributes.put("title", getTitle());
		attributes.put("desc", getDesc());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("flag", getFlag());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String inductionid = (String)attributes.get("inductionid");

		if (inductionid != null) {
			setInductionid(inductionid);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		String desc = (String)attributes.get("desc");

		if (desc != null) {
			setDesc(desc);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		String flag = (String)attributes.get("flag");

		if (flag != null) {
			setFlag(flag);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public String getInductionid() {
		if (_inductionid == null) {
			return StringPool.BLANK;
		}
		else {
			return _inductionid;
		}
	}

	@Override
	public void setInductionid(String inductionid) {
		_inductionid = inductionid;
	}

	@JSON
	@Override
	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_title = title;
	}

	@JSON
	@Override
	public String getDesc() {
		if (_desc == null) {
			return StringPool.BLANK;
		}
		else {
			return _desc;
		}
	}

	@Override
	public void setDesc(String desc) {
		_desc = desc;
	}

	@JSON
	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@JSON
	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@JSON
	@Override
	public String getFlag() {
		if (_flag == null) {
			return StringPool.BLANK;
		}
		else {
			return _flag;
		}
	}

	@Override
	public void setFlag(String flag) {
		_flag = flag;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			swagatam.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public swagatam toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (swagatam)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		swagatamImpl swagatamImpl = new swagatamImpl();

		swagatamImpl.setId(getId());
		swagatamImpl.setInductionid(getInductionid());
		swagatamImpl.setTitle(getTitle());
		swagatamImpl.setDesc(getDesc());
		swagatamImpl.setCreatedDate(getCreatedDate());
		swagatamImpl.setCreatedBy(getCreatedBy());
		swagatamImpl.setFlag(getFlag());

		swagatamImpl.resetOriginalValues();

		return swagatamImpl;
	}

	@Override
	public int compareTo(swagatam swagatam) {
		long primaryKey = swagatam.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof swagatam)) {
			return false;
		}

		swagatam swagatam = (swagatam)obj;

		long primaryKey = swagatam.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<swagatam> toCacheModel() {
		swagatamCacheModel swagatamCacheModel = new swagatamCacheModel();

		swagatamCacheModel.id = getId();

		swagatamCacheModel.inductionid = getInductionid();

		String inductionid = swagatamCacheModel.inductionid;

		if ((inductionid != null) && (inductionid.length() == 0)) {
			swagatamCacheModel.inductionid = null;
		}

		swagatamCacheModel.title = getTitle();

		String title = swagatamCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			swagatamCacheModel.title = null;
		}

		swagatamCacheModel.desc = getDesc();

		String desc = swagatamCacheModel.desc;

		if ((desc != null) && (desc.length() == 0)) {
			swagatamCacheModel.desc = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			swagatamCacheModel.createdDate = createdDate.getTime();
		}
		else {
			swagatamCacheModel.createdDate = Long.MIN_VALUE;
		}

		swagatamCacheModel.createdBy = getCreatedBy();

		String createdBy = swagatamCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			swagatamCacheModel.createdBy = null;
		}

		swagatamCacheModel.flag = getFlag();

		String flag = swagatamCacheModel.flag;

		if ((flag != null) && (flag.length() == 0)) {
			swagatamCacheModel.flag = null;
		}

		return swagatamCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", inductionid=");
		sb.append(getInductionid());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", desc=");
		sb.append(getDesc());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", flag=");
		sb.append(getFlag());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("com.chola.swagatam.model.swagatam");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inductionid</column-name><column-value><![CDATA[");
		sb.append(getInductionid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>desc</column-name><column-value><![CDATA[");
		sb.append(getDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>flag</column-name><column-value><![CDATA[");
		sb.append(getFlag());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = swagatam.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			swagatam.class
		};
	private long _id;
	private String _inductionid;
	private String _title;
	private String _desc;
	private Date _createdDate;
	private String _createdBy;
	private String _flag;
	private swagatam _escapedModel;
}