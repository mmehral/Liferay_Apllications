/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.chola.conferenceroombooking.service.base;

import com.chola.conferenceroombooking.model.room;
import com.chola.conferenceroombooking.service.persistence.cityPersistence;
import com.chola.conferenceroombooking.service.persistence.conferenceroombookingdetailsFinder;
import com.chola.conferenceroombooking.service.persistence.conferenceroombookingdetailsPersistence;
import com.chola.conferenceroombooking.service.persistence.facilitymasterPersistence;
import com.chola.conferenceroombooking.service.persistence.floorwingPersistence;
import com.chola.conferenceroombooking.service.persistence.locationFinder;
import com.chola.conferenceroombooking.service.persistence.locationPersistence;
import com.chola.conferenceroombooking.service.persistence.roomPersistence;
import com.chola.conferenceroombooking.service.persistence.statePersistence;
import com.chola.conferenceroombooking.service.roomService;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.service.persistence.ClassNamePersistence;
import com.liferay.portal.kernel.service.persistence.UserPersistence;
import com.liferay.portal.kernel.util.PortalUtil;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the room remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.chola.conferenceroombooking.service.impl.roomServiceImpl}.
 * </p>
 *
 * @author adms.java1
 * @see com.chola.conferenceroombooking.service.impl.roomServiceImpl
 * @see com.chola.conferenceroombooking.service.roomServiceUtil
 * @generated
 */
public abstract class roomServiceBaseImpl extends BaseServiceImpl
	implements roomService, IdentifiableOSGiService {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.chola.conferenceroombooking.service.roomServiceUtil} to access the room remote service.
	 */

	/**
	 * Returns the city local service.
	 *
	 * @return the city local service
	 */
	public com.chola.conferenceroombooking.service.cityLocalService getcityLocalService() {
		return cityLocalService;
	}

	/**
	 * Sets the city local service.
	 *
	 * @param cityLocalService the city local service
	 */
	public void setcityLocalService(
		com.chola.conferenceroombooking.service.cityLocalService cityLocalService) {
		this.cityLocalService = cityLocalService;
	}

	/**
	 * Returns the city remote service.
	 *
	 * @return the city remote service
	 */
	public com.chola.conferenceroombooking.service.cityService getcityService() {
		return cityService;
	}

	/**
	 * Sets the city remote service.
	 *
	 * @param cityService the city remote service
	 */
	public void setcityService(
		com.chola.conferenceroombooking.service.cityService cityService) {
		this.cityService = cityService;
	}

	/**
	 * Returns the city persistence.
	 *
	 * @return the city persistence
	 */
	public cityPersistence getcityPersistence() {
		return cityPersistence;
	}

	/**
	 * Sets the city persistence.
	 *
	 * @param cityPersistence the city persistence
	 */
	public void setcityPersistence(cityPersistence cityPersistence) {
		this.cityPersistence = cityPersistence;
	}

	/**
	 * Returns the conferenceroombookingdetails local service.
	 *
	 * @return the conferenceroombookingdetails local service
	 */
	public com.chola.conferenceroombooking.service.conferenceroombookingdetailsLocalService getconferenceroombookingdetailsLocalService() {
		return conferenceroombookingdetailsLocalService;
	}

	/**
	 * Sets the conferenceroombookingdetails local service.
	 *
	 * @param conferenceroombookingdetailsLocalService the conferenceroombookingdetails local service
	 */
	public void setconferenceroombookingdetailsLocalService(
		com.chola.conferenceroombooking.service.conferenceroombookingdetailsLocalService conferenceroombookingdetailsLocalService) {
		this.conferenceroombookingdetailsLocalService = conferenceroombookingdetailsLocalService;
	}

	/**
	 * Returns the conferenceroombookingdetails remote service.
	 *
	 * @return the conferenceroombookingdetails remote service
	 */
	public com.chola.conferenceroombooking.service.conferenceroombookingdetailsService getconferenceroombookingdetailsService() {
		return conferenceroombookingdetailsService;
	}

	/**
	 * Sets the conferenceroombookingdetails remote service.
	 *
	 * @param conferenceroombookingdetailsService the conferenceroombookingdetails remote service
	 */
	public void setconferenceroombookingdetailsService(
		com.chola.conferenceroombooking.service.conferenceroombookingdetailsService conferenceroombookingdetailsService) {
		this.conferenceroombookingdetailsService = conferenceroombookingdetailsService;
	}

	/**
	 * Returns the conferenceroombookingdetails persistence.
	 *
	 * @return the conferenceroombookingdetails persistence
	 */
	public conferenceroombookingdetailsPersistence getconferenceroombookingdetailsPersistence() {
		return conferenceroombookingdetailsPersistence;
	}

	/**
	 * Sets the conferenceroombookingdetails persistence.
	 *
	 * @param conferenceroombookingdetailsPersistence the conferenceroombookingdetails persistence
	 */
	public void setconferenceroombookingdetailsPersistence(
		conferenceroombookingdetailsPersistence conferenceroombookingdetailsPersistence) {
		this.conferenceroombookingdetailsPersistence = conferenceroombookingdetailsPersistence;
	}

	/**
	 * Returns the conferenceroombookingdetails finder.
	 *
	 * @return the conferenceroombookingdetails finder
	 */
	public conferenceroombookingdetailsFinder getconferenceroombookingdetailsFinder() {
		return conferenceroombookingdetailsFinder;
	}

	/**
	 * Sets the conferenceroombookingdetails finder.
	 *
	 * @param conferenceroombookingdetailsFinder the conferenceroombookingdetails finder
	 */
	public void setconferenceroombookingdetailsFinder(
		conferenceroombookingdetailsFinder conferenceroombookingdetailsFinder) {
		this.conferenceroombookingdetailsFinder = conferenceroombookingdetailsFinder;
	}

	/**
	 * Returns the facilitymaster local service.
	 *
	 * @return the facilitymaster local service
	 */
	public com.chola.conferenceroombooking.service.facilitymasterLocalService getfacilitymasterLocalService() {
		return facilitymasterLocalService;
	}

	/**
	 * Sets the facilitymaster local service.
	 *
	 * @param facilitymasterLocalService the facilitymaster local service
	 */
	public void setfacilitymasterLocalService(
		com.chola.conferenceroombooking.service.facilitymasterLocalService facilitymasterLocalService) {
		this.facilitymasterLocalService = facilitymasterLocalService;
	}

	/**
	 * Returns the facilitymaster remote service.
	 *
	 * @return the facilitymaster remote service
	 */
	public com.chola.conferenceroombooking.service.facilitymasterService getfacilitymasterService() {
		return facilitymasterService;
	}

	/**
	 * Sets the facilitymaster remote service.
	 *
	 * @param facilitymasterService the facilitymaster remote service
	 */
	public void setfacilitymasterService(
		com.chola.conferenceroombooking.service.facilitymasterService facilitymasterService) {
		this.facilitymasterService = facilitymasterService;
	}

	/**
	 * Returns the facilitymaster persistence.
	 *
	 * @return the facilitymaster persistence
	 */
	public facilitymasterPersistence getfacilitymasterPersistence() {
		return facilitymasterPersistence;
	}

	/**
	 * Sets the facilitymaster persistence.
	 *
	 * @param facilitymasterPersistence the facilitymaster persistence
	 */
	public void setfacilitymasterPersistence(
		facilitymasterPersistence facilitymasterPersistence) {
		this.facilitymasterPersistence = facilitymasterPersistence;
	}

	/**
	 * Returns the floorwing local service.
	 *
	 * @return the floorwing local service
	 */
	public com.chola.conferenceroombooking.service.floorwingLocalService getfloorwingLocalService() {
		return floorwingLocalService;
	}

	/**
	 * Sets the floorwing local service.
	 *
	 * @param floorwingLocalService the floorwing local service
	 */
	public void setfloorwingLocalService(
		com.chola.conferenceroombooking.service.floorwingLocalService floorwingLocalService) {
		this.floorwingLocalService = floorwingLocalService;
	}

	/**
	 * Returns the floorwing remote service.
	 *
	 * @return the floorwing remote service
	 */
	public com.chola.conferenceroombooking.service.floorwingService getfloorwingService() {
		return floorwingService;
	}

	/**
	 * Sets the floorwing remote service.
	 *
	 * @param floorwingService the floorwing remote service
	 */
	public void setfloorwingService(
		com.chola.conferenceroombooking.service.floorwingService floorwingService) {
		this.floorwingService = floorwingService;
	}

	/**
	 * Returns the floorwing persistence.
	 *
	 * @return the floorwing persistence
	 */
	public floorwingPersistence getfloorwingPersistence() {
		return floorwingPersistence;
	}

	/**
	 * Sets the floorwing persistence.
	 *
	 * @param floorwingPersistence the floorwing persistence
	 */
	public void setfloorwingPersistence(
		floorwingPersistence floorwingPersistence) {
		this.floorwingPersistence = floorwingPersistence;
	}

	/**
	 * Returns the location local service.
	 *
	 * @return the location local service
	 */
	public com.chola.conferenceroombooking.service.locationLocalService getlocationLocalService() {
		return locationLocalService;
	}

	/**
	 * Sets the location local service.
	 *
	 * @param locationLocalService the location local service
	 */
	public void setlocationLocalService(
		com.chola.conferenceroombooking.service.locationLocalService locationLocalService) {
		this.locationLocalService = locationLocalService;
	}

	/**
	 * Returns the location remote service.
	 *
	 * @return the location remote service
	 */
	public com.chola.conferenceroombooking.service.locationService getlocationService() {
		return locationService;
	}

	/**
	 * Sets the location remote service.
	 *
	 * @param locationService the location remote service
	 */
	public void setlocationService(
		com.chola.conferenceroombooking.service.locationService locationService) {
		this.locationService = locationService;
	}

	/**
	 * Returns the location persistence.
	 *
	 * @return the location persistence
	 */
	public locationPersistence getlocationPersistence() {
		return locationPersistence;
	}

	/**
	 * Sets the location persistence.
	 *
	 * @param locationPersistence the location persistence
	 */
	public void setlocationPersistence(locationPersistence locationPersistence) {
		this.locationPersistence = locationPersistence;
	}

	/**
	 * Returns the location finder.
	 *
	 * @return the location finder
	 */
	public locationFinder getlocationFinder() {
		return locationFinder;
	}

	/**
	 * Sets the location finder.
	 *
	 * @param locationFinder the location finder
	 */
	public void setlocationFinder(locationFinder locationFinder) {
		this.locationFinder = locationFinder;
	}

	/**
	 * Returns the room local service.
	 *
	 * @return the room local service
	 */
	public com.chola.conferenceroombooking.service.roomLocalService getroomLocalService() {
		return roomLocalService;
	}

	/**
	 * Sets the room local service.
	 *
	 * @param roomLocalService the room local service
	 */
	public void setroomLocalService(
		com.chola.conferenceroombooking.service.roomLocalService roomLocalService) {
		this.roomLocalService = roomLocalService;
	}

	/**
	 * Returns the room remote service.
	 *
	 * @return the room remote service
	 */
	public roomService getroomService() {
		return roomService;
	}

	/**
	 * Sets the room remote service.
	 *
	 * @param roomService the room remote service
	 */
	public void setroomService(roomService roomService) {
		this.roomService = roomService;
	}

	/**
	 * Returns the room persistence.
	 *
	 * @return the room persistence
	 */
	public roomPersistence getroomPersistence() {
		return roomPersistence;
	}

	/**
	 * Sets the room persistence.
	 *
	 * @param roomPersistence the room persistence
	 */
	public void setroomPersistence(roomPersistence roomPersistence) {
		this.roomPersistence = roomPersistence;
	}

	/**
	 * Returns the state local service.
	 *
	 * @return the state local service
	 */
	public com.chola.conferenceroombooking.service.stateLocalService getstateLocalService() {
		return stateLocalService;
	}

	/**
	 * Sets the state local service.
	 *
	 * @param stateLocalService the state local service
	 */
	public void setstateLocalService(
		com.chola.conferenceroombooking.service.stateLocalService stateLocalService) {
		this.stateLocalService = stateLocalService;
	}

	/**
	 * Returns the state remote service.
	 *
	 * @return the state remote service
	 */
	public com.chola.conferenceroombooking.service.stateService getstateService() {
		return stateService;
	}

	/**
	 * Sets the state remote service.
	 *
	 * @param stateService the state remote service
	 */
	public void setstateService(
		com.chola.conferenceroombooking.service.stateService stateService) {
		this.stateService = stateService;
	}

	/**
	 * Returns the state persistence.
	 *
	 * @return the state persistence
	 */
	public statePersistence getstatePersistence() {
		return statePersistence;
	}

	/**
	 * Sets the state persistence.
	 *
	 * @param statePersistence the state persistence
	 */
	public void setstatePersistence(statePersistence statePersistence) {
		this.statePersistence = statePersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the class name local service.
	 *
	 * @return the class name local service
	 */
	public com.liferay.portal.kernel.service.ClassNameLocalService getClassNameLocalService() {
		return classNameLocalService;
	}

	/**
	 * Sets the class name local service.
	 *
	 * @param classNameLocalService the class name local service
	 */
	public void setClassNameLocalService(
		com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService) {
		this.classNameLocalService = classNameLocalService;
	}

	/**
	 * Returns the class name remote service.
	 *
	 * @return the class name remote service
	 */
	public com.liferay.portal.kernel.service.ClassNameService getClassNameService() {
		return classNameService;
	}

	/**
	 * Sets the class name remote service.
	 *
	 * @param classNameService the class name remote service
	 */
	public void setClassNameService(
		com.liferay.portal.kernel.service.ClassNameService classNameService) {
		this.classNameService = classNameService;
	}

	/**
	 * Returns the class name persistence.
	 *
	 * @return the class name persistence
	 */
	public ClassNamePersistence getClassNamePersistence() {
		return classNamePersistence;
	}

	/**
	 * Sets the class name persistence.
	 *
	 * @param classNamePersistence the class name persistence
	 */
	public void setClassNamePersistence(
		ClassNamePersistence classNamePersistence) {
		this.classNamePersistence = classNamePersistence;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.kernel.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.kernel.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.kernel.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.kernel.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.kernel.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return roomService.class.getName();
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return room.class;
	}

	protected String getModelClassName() {
		return room.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = roomPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.chola.conferenceroombooking.service.cityLocalService.class)
	protected com.chola.conferenceroombooking.service.cityLocalService cityLocalService;
	@BeanReference(type = com.chola.conferenceroombooking.service.cityService.class)
	protected com.chola.conferenceroombooking.service.cityService cityService;
	@BeanReference(type = cityPersistence.class)
	protected cityPersistence cityPersistence;
	@BeanReference(type = com.chola.conferenceroombooking.service.conferenceroombookingdetailsLocalService.class)
	protected com.chola.conferenceroombooking.service.conferenceroombookingdetailsLocalService conferenceroombookingdetailsLocalService;
	@BeanReference(type = com.chola.conferenceroombooking.service.conferenceroombookingdetailsService.class)
	protected com.chola.conferenceroombooking.service.conferenceroombookingdetailsService conferenceroombookingdetailsService;
	@BeanReference(type = conferenceroombookingdetailsPersistence.class)
	protected conferenceroombookingdetailsPersistence conferenceroombookingdetailsPersistence;
	@BeanReference(type = conferenceroombookingdetailsFinder.class)
	protected conferenceroombookingdetailsFinder conferenceroombookingdetailsFinder;
	@BeanReference(type = com.chola.conferenceroombooking.service.facilitymasterLocalService.class)
	protected com.chola.conferenceroombooking.service.facilitymasterLocalService facilitymasterLocalService;
	@BeanReference(type = com.chola.conferenceroombooking.service.facilitymasterService.class)
	protected com.chola.conferenceroombooking.service.facilitymasterService facilitymasterService;
	@BeanReference(type = facilitymasterPersistence.class)
	protected facilitymasterPersistence facilitymasterPersistence;
	@BeanReference(type = com.chola.conferenceroombooking.service.floorwingLocalService.class)
	protected com.chola.conferenceroombooking.service.floorwingLocalService floorwingLocalService;
	@BeanReference(type = com.chola.conferenceroombooking.service.floorwingService.class)
	protected com.chola.conferenceroombooking.service.floorwingService floorwingService;
	@BeanReference(type = floorwingPersistence.class)
	protected floorwingPersistence floorwingPersistence;
	@BeanReference(type = com.chola.conferenceroombooking.service.locationLocalService.class)
	protected com.chola.conferenceroombooking.service.locationLocalService locationLocalService;
	@BeanReference(type = com.chola.conferenceroombooking.service.locationService.class)
	protected com.chola.conferenceroombooking.service.locationService locationService;
	@BeanReference(type = locationPersistence.class)
	protected locationPersistence locationPersistence;
	@BeanReference(type = locationFinder.class)
	protected locationFinder locationFinder;
	@BeanReference(type = com.chola.conferenceroombooking.service.roomLocalService.class)
	protected com.chola.conferenceroombooking.service.roomLocalService roomLocalService;
	@BeanReference(type = roomService.class)
	protected roomService roomService;
	@BeanReference(type = roomPersistence.class)
	protected roomPersistence roomPersistence;
	@BeanReference(type = com.chola.conferenceroombooking.service.stateLocalService.class)
	protected com.chola.conferenceroombooking.service.stateLocalService stateLocalService;
	@BeanReference(type = com.chola.conferenceroombooking.service.stateService.class)
	protected com.chola.conferenceroombooking.service.stateService stateService;
	@BeanReference(type = statePersistence.class)
	protected statePersistence statePersistence;
	@BeanReference(type = com.liferay.counter.kernel.service.CounterLocalService.class)
	protected com.liferay.counter.kernel.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ClassNameLocalService.class)
	protected com.liferay.portal.kernel.service.ClassNameLocalService classNameLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.ClassNameService.class)
	protected com.liferay.portal.kernel.service.ClassNameService classNameService;
	@BeanReference(type = ClassNamePersistence.class)
	protected ClassNamePersistence classNamePersistence;
	@BeanReference(type = com.liferay.portal.kernel.service.ResourceLocalService.class)
	protected com.liferay.portal.kernel.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserLocalService.class)
	protected com.liferay.portal.kernel.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.kernel.service.UserService.class)
	protected com.liferay.portal.kernel.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private ClassLoader _classLoader;
	private roomServiceClpInvoker _clpInvoker = new roomServiceClpInvoker();
}