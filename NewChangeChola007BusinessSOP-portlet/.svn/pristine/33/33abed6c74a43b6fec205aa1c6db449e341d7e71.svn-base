/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.chola.personalisedparameters.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the bsoppath service. Represents a row in the &quot;chola_bsoppath&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.chola.personalisedparameters.model.impl.bsoppathModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.chola.personalisedparameters.model.impl.bsoppathImpl}.
 * </p>
 *
 * @author cloverliferay01
 * @see bsoppath
 * @see com.chola.personalisedparameters.model.impl.bsoppathImpl
 * @see com.chola.personalisedparameters.model.impl.bsoppathModelImpl
 * @generated
 */
@ProviderType
public interface bsoppathModel extends BaseModel<bsoppath> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a bsoppath model instance should use the {@link bsoppath} interface instead.
	 */

	/**
	 * Returns the primary key of this bsoppath.
	 *
	 * @return the primary key of this bsoppath
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this bsoppath.
	 *
	 * @param primaryKey the primary key of this bsoppath
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this bsoppath.
	 *
	 * @return the ID of this bsoppath
	 */
	public long getId();

	/**
	 * Sets the ID of this bsoppath.
	 *
	 * @param id the ID of this bsoppath
	 */
	public void setId(long id);

	/**
	 * Returns the bdoc of this bsoppath.
	 *
	 * @return the bdoc of this bsoppath
	 */
	@AutoEscape
	public String getBdoc();

	/**
	 * Sets the bdoc of this bsoppath.
	 *
	 * @param bdoc the bdoc of this bsoppath
	 */
	public void setBdoc(String bdoc);

	/**
	 * Returns the bpath of this bsoppath.
	 *
	 * @return the bpath of this bsoppath
	 */
	@AutoEscape
	public String getBpath();

	/**
	 * Sets the bpath of this bsoppath.
	 *
	 * @param bpath the bpath of this bsoppath
	 */
	public void setBpath(String bpath);

	/**
	 * Returns the createddate of this bsoppath.
	 *
	 * @return the createddate of this bsoppath
	 */
	public Date getCreateddate();

	/**
	 * Sets the createddate of this bsoppath.
	 *
	 * @param createddate the createddate of this bsoppath
	 */
	public void setCreateddate(Date createddate);

	/**
	 * Returns the createdby of this bsoppath.
	 *
	 * @return the createdby of this bsoppath
	 */
	@AutoEscape
	public String getCreatedby();

	/**
	 * Sets the createdby of this bsoppath.
	 *
	 * @param createdby the createdby of this bsoppath
	 */
	public void setCreatedby(String createdby);

	/**
	 * Returns the flag of this bsoppath.
	 *
	 * @return the flag of this bsoppath
	 */
	@AutoEscape
	public String getFlag();

	/**
	 * Sets the flag of this bsoppath.
	 *
	 * @param flag the flag of this bsoppath
	 */
	public void setFlag(String flag);

	/**
	 * Returns the bdetails_id of this bsoppath.
	 *
	 * @return the bdetails_id of this bsoppath
	 */
	public long getBdetails_id();

	/**
	 * Sets the bdetails_id of this bsoppath.
	 *
	 * @param bdetails_id the bdetails_id of this bsoppath
	 */
	public void setBdetails_id(long bdetails_id);

	/**
	 * Returns the bdetailscontent_id of this bsoppath.
	 *
	 * @return the bdetailscontent_id of this bsoppath
	 */
	public long getBdetailscontent_id();

	/**
	 * Sets the bdetailscontent_id of this bsoppath.
	 *
	 * @param bdetailscontent_id the bdetailscontent_id of this bsoppath
	 */
	public void setBdetailscontent_id(long bdetailscontent_id);

	/**
	 * Returns the filename of this bsoppath.
	 *
	 * @return the filename of this bsoppath
	 */
	@AutoEscape
	public String getFilename();

	/**
	 * Sets the filename of this bsoppath.
	 *
	 * @param filename the filename of this bsoppath
	 */
	public void setFilename(String filename);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.chola.personalisedparameters.model.bsoppath bsoppath);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.chola.personalisedparameters.model.bsoppath> toCacheModel();

	@Override
	public com.chola.personalisedparameters.model.bsoppath toEscapedModel();

	@Override
	public com.chola.personalisedparameters.model.bsoppath toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}