/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.chola.personalisedparameters.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.chola.personalisedparameters.model.bsopdetails;
import com.chola.personalisedparameters.model.bsopdetailsModel;
import com.chola.personalisedparameters.model.bsopdetailsSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the bsopdetails service. Represents a row in the &quot;chola_bsopdetails&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link bsopdetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link bsopdetailsImpl}.
 * </p>
 *
 * @author cloverliferay01
 * @see bsopdetailsImpl
 * @see bsopdetails
 * @see bsopdetailsModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class bsopdetailsModelImpl extends BaseModelImpl<bsopdetails>
	implements bsopdetailsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a bsopdetails model instance should use the {@link bsopdetails} interface instead.
	 */
	public static final String TABLE_NAME = "chola_bsopdetails";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "content_id", Types.BIGINT },
			{ "btitle", Types.VARCHAR },
			{ "bdesc", Types.VARCHAR },
			{ "createddate", Types.TIMESTAMP },
			{ "createdby", Types.VARCHAR },
			{ "modifieddate", Types.TIMESTAMP },
			{ "modifiedby", Types.BIGINT },
			{ "flag", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("content_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("btitle", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("bdesc", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createddate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("createdby", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("modifieddate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedby", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("flag", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table chola_bsopdetails (id_ LONG not null primary key,content_id LONG,btitle VARCHAR(75) null,bdesc VARCHAR(75) null,createddate DATE null,createdby VARCHAR(75) null,modifieddate DATE null,modifiedby LONG,flag VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table chola_bsopdetails";
	public static final String ORDER_BY_JPQL = " ORDER BY bsopdetails.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY chola_bsopdetails.id_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.chola.personalisedparameters.model.bsopdetails"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.chola.personalisedparameters.model.bsopdetails"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static bsopdetails toModel(bsopdetailsSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		bsopdetails model = new bsopdetailsImpl();

		model.setId(soapModel.getId());
		model.setContent_id(soapModel.getContent_id());
		model.setBtitle(soapModel.getBtitle());
		model.setBdesc(soapModel.getBdesc());
		model.setCreateddate(soapModel.getCreateddate());
		model.setCreatedby(soapModel.getCreatedby());
		model.setModifieddate(soapModel.getModifieddate());
		model.setModifiedby(soapModel.getModifiedby());
		model.setFlag(soapModel.getFlag());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<bsopdetails> toModels(bsopdetailsSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<bsopdetails> models = new ArrayList<bsopdetails>(soapModels.length);

		for (bsopdetailsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.chola.personalisedparameters.model.bsopdetails"));

	public bsopdetailsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return bsopdetails.class;
	}

	@Override
	public String getModelClassName() {
		return bsopdetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("content_id", getContent_id());
		attributes.put("btitle", getBtitle());
		attributes.put("bdesc", getBdesc());
		attributes.put("createddate", getCreateddate());
		attributes.put("createdby", getCreatedby());
		attributes.put("modifieddate", getModifieddate());
		attributes.put("modifiedby", getModifiedby());
		attributes.put("flag", getFlag());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long content_id = (Long)attributes.get("content_id");

		if (content_id != null) {
			setContent_id(content_id);
		}

		String btitle = (String)attributes.get("btitle");

		if (btitle != null) {
			setBtitle(btitle);
		}

		String bdesc = (String)attributes.get("bdesc");

		if (bdesc != null) {
			setBdesc(bdesc);
		}

		Date createddate = (Date)attributes.get("createddate");

		if (createddate != null) {
			setCreateddate(createddate);
		}

		String createdby = (String)attributes.get("createdby");

		if (createdby != null) {
			setCreatedby(createdby);
		}

		Date modifieddate = (Date)attributes.get("modifieddate");

		if (modifieddate != null) {
			setModifieddate(modifieddate);
		}

		Long modifiedby = (Long)attributes.get("modifiedby");

		if (modifiedby != null) {
			setModifiedby(modifiedby);
		}

		String flag = (String)attributes.get("flag");

		if (flag != null) {
			setFlag(flag);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public long getContent_id() {
		return _content_id;
	}

	@Override
	public void setContent_id(long content_id) {
		_content_id = content_id;
	}

	@JSON
	@Override
	public String getBtitle() {
		if (_btitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _btitle;
		}
	}

	@Override
	public void setBtitle(String btitle) {
		_btitle = btitle;
	}

	@JSON
	@Override
	public String getBdesc() {
		if (_bdesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _bdesc;
		}
	}

	@Override
	public void setBdesc(String bdesc) {
		_bdesc = bdesc;
	}

	@JSON
	@Override
	public Date getCreateddate() {
		return _createddate;
	}

	@Override
	public void setCreateddate(Date createddate) {
		_createddate = createddate;
	}

	@JSON
	@Override
	public String getCreatedby() {
		if (_createdby == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdby;
		}
	}

	@Override
	public void setCreatedby(String createdby) {
		_createdby = createdby;
	}

	@JSON
	@Override
	public Date getModifieddate() {
		return _modifieddate;
	}

	@Override
	public void setModifieddate(Date modifieddate) {
		_modifieddate = modifieddate;
	}

	@JSON
	@Override
	public long getModifiedby() {
		return _modifiedby;
	}

	@Override
	public void setModifiedby(long modifiedby) {
		_modifiedby = modifiedby;
	}

	@JSON
	@Override
	public String getFlag() {
		if (_flag == null) {
			return StringPool.BLANK;
		}
		else {
			return _flag;
		}
	}

	@Override
	public void setFlag(String flag) {
		_flag = flag;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			bsopdetails.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public bsopdetails toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (bsopdetails)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		bsopdetailsImpl bsopdetailsImpl = new bsopdetailsImpl();

		bsopdetailsImpl.setId(getId());
		bsopdetailsImpl.setContent_id(getContent_id());
		bsopdetailsImpl.setBtitle(getBtitle());
		bsopdetailsImpl.setBdesc(getBdesc());
		bsopdetailsImpl.setCreateddate(getCreateddate());
		bsopdetailsImpl.setCreatedby(getCreatedby());
		bsopdetailsImpl.setModifieddate(getModifieddate());
		bsopdetailsImpl.setModifiedby(getModifiedby());
		bsopdetailsImpl.setFlag(getFlag());

		bsopdetailsImpl.resetOriginalValues();

		return bsopdetailsImpl;
	}

	@Override
	public int compareTo(bsopdetails bsopdetails) {
		long primaryKey = bsopdetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof bsopdetails)) {
			return false;
		}

		bsopdetails bsopdetails = (bsopdetails)obj;

		long primaryKey = bsopdetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<bsopdetails> toCacheModel() {
		bsopdetailsCacheModel bsopdetailsCacheModel = new bsopdetailsCacheModel();

		bsopdetailsCacheModel.id = getId();

		bsopdetailsCacheModel.content_id = getContent_id();

		bsopdetailsCacheModel.btitle = getBtitle();

		String btitle = bsopdetailsCacheModel.btitle;

		if ((btitle != null) && (btitle.length() == 0)) {
			bsopdetailsCacheModel.btitle = null;
		}

		bsopdetailsCacheModel.bdesc = getBdesc();

		String bdesc = bsopdetailsCacheModel.bdesc;

		if ((bdesc != null) && (bdesc.length() == 0)) {
			bsopdetailsCacheModel.bdesc = null;
		}

		Date createddate = getCreateddate();

		if (createddate != null) {
			bsopdetailsCacheModel.createddate = createddate.getTime();
		}
		else {
			bsopdetailsCacheModel.createddate = Long.MIN_VALUE;
		}

		bsopdetailsCacheModel.createdby = getCreatedby();

		String createdby = bsopdetailsCacheModel.createdby;

		if ((createdby != null) && (createdby.length() == 0)) {
			bsopdetailsCacheModel.createdby = null;
		}

		Date modifieddate = getModifieddate();

		if (modifieddate != null) {
			bsopdetailsCacheModel.modifieddate = modifieddate.getTime();
		}
		else {
			bsopdetailsCacheModel.modifieddate = Long.MIN_VALUE;
		}

		bsopdetailsCacheModel.modifiedby = getModifiedby();

		bsopdetailsCacheModel.flag = getFlag();

		String flag = bsopdetailsCacheModel.flag;

		if ((flag != null) && (flag.length() == 0)) {
			bsopdetailsCacheModel.flag = null;
		}

		return bsopdetailsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", content_id=");
		sb.append(getContent_id());
		sb.append(", btitle=");
		sb.append(getBtitle());
		sb.append(", bdesc=");
		sb.append(getBdesc());
		sb.append(", createddate=");
		sb.append(getCreateddate());
		sb.append(", createdby=");
		sb.append(getCreatedby());
		sb.append(", modifieddate=");
		sb.append(getModifieddate());
		sb.append(", modifiedby=");
		sb.append(getModifiedby());
		sb.append(", flag=");
		sb.append(getFlag());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.chola.personalisedparameters.model.bsopdetails");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>content_id</column-name><column-value><![CDATA[");
		sb.append(getContent_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>btitle</column-name><column-value><![CDATA[");
		sb.append(getBtitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bdesc</column-name><column-value><![CDATA[");
		sb.append(getBdesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createddate</column-name><column-value><![CDATA[");
		sb.append(getCreateddate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdby</column-name><column-value><![CDATA[");
		sb.append(getCreatedby());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifieddate</column-name><column-value><![CDATA[");
		sb.append(getModifieddate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedby</column-name><column-value><![CDATA[");
		sb.append(getModifiedby());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>flag</column-name><column-value><![CDATA[");
		sb.append(getFlag());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = bsopdetails.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			bsopdetails.class
		};
	private long _id;
	private long _content_id;
	private String _btitle;
	private String _bdesc;
	private Date _createddate;
	private String _createdby;
	private Date _modifieddate;
	private long _modifiedby;
	private String _flag;
	private bsopdetails _escapedModel;
}