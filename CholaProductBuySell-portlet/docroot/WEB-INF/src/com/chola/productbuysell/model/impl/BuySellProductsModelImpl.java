/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.chola.productbuysell.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.chola.productbuysell.model.BuySellProducts;
import com.chola.productbuysell.model.BuySellProductsModel;
import com.chola.productbuysell.model.BuySellProductsSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the BuySellProducts service. Represents a row in the &quot;chola_BuySellProducts&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link BuySellProductsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BuySellProductsImpl}.
 * </p>
 *
 * @author CloverLiferay03
 * @see BuySellProductsImpl
 * @see BuySellProducts
 * @see BuySellProductsModel
 * @generated
 */
@JSON(strict = true)
@ProviderType
public class BuySellProductsModelImpl extends BaseModelImpl<BuySellProducts>
	implements BuySellProductsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a buy sell products model instance should use the {@link BuySellProducts} interface instead.
	 */
	public static final String TABLE_NAME = "chola_BuySellProducts";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "sellerName", Types.VARCHAR },
			{ "contactNumber", Types.VARCHAR },
			{ "content_id", Types.BIGINT },
			{ "category_id", Types.BIGINT },
			{ "title", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "askingPrice", Types.VARCHAR },
			{ "userScreenName", Types.VARCHAR },
			{ "location", Types.BIGINT },
			{ "status", Types.BIGINT },
			{ "approvedstatus", Types.BIGINT },
			{ "created_date", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("id_", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("sellerName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("content_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("category_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("title", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("askingPrice", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("userScreenName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("location", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("status", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("approvedstatus", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("created_date", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table chola_BuySellProducts (id_ LONG not null primary key,sellerName VARCHAR(75) null,contactNumber VARCHAR(75) null,content_id LONG,category_id LONG,title VARCHAR(75) null,description VARCHAR(75) null,askingPrice VARCHAR(75) null,userScreenName VARCHAR(75) null,location LONG,status LONG,approvedstatus LONG,created_date DATE null)";
	public static final String TABLE_SQL_DROP = "drop table chola_BuySellProducts";
	public static final String ORDER_BY_JPQL = " ORDER BY buySellProducts.created_date DESC";
	public static final String ORDER_BY_SQL = " ORDER BY chola_BuySellProducts.created_date DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.chola.productbuysell.model.BuySellProducts"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.chola.productbuysell.model.BuySellProducts"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.chola.productbuysell.model.BuySellProducts"),
			true);
	public static final long CATEGORY_ID_COLUMN_BITMASK = 1L;
	public static final long LOCATION_COLUMN_BITMASK = 2L;
	public static final long TITLE_COLUMN_BITMASK = 4L;
	public static final long CREATED_DATE_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static BuySellProducts toModel(BuySellProductsSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		BuySellProducts model = new BuySellProductsImpl();

		model.setId(soapModel.getId());
		model.setSellerName(soapModel.getSellerName());
		model.setContactNumber(soapModel.getContactNumber());
		model.setContent_id(soapModel.getContent_id());
		model.setCategory_id(soapModel.getCategory_id());
		model.setTitle(soapModel.getTitle());
		model.setDescription(soapModel.getDescription());
		model.setAskingPrice(soapModel.getAskingPrice());
		model.setUserScreenName(soapModel.getUserScreenName());
		model.setLocation(soapModel.getLocation());
		model.setStatus(soapModel.getStatus());
		model.setApprovedstatus(soapModel.getApprovedstatus());
		model.setCreated_date(soapModel.getCreated_date());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<BuySellProducts> toModels(
		BuySellProductsSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<BuySellProducts> models = new ArrayList<BuySellProducts>(soapModels.length);

		for (BuySellProductsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.chola.productbuysell.model.BuySellProducts"));

	public BuySellProductsModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return BuySellProducts.class;
	}

	@Override
	public String getModelClassName() {
		return BuySellProducts.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("sellerName", getSellerName());
		attributes.put("contactNumber", getContactNumber());
		attributes.put("content_id", getContent_id());
		attributes.put("category_id", getCategory_id());
		attributes.put("title", getTitle());
		attributes.put("description", getDescription());
		attributes.put("askingPrice", getAskingPrice());
		attributes.put("userScreenName", getUserScreenName());
		attributes.put("location", getLocation());
		attributes.put("status", getStatus());
		attributes.put("approvedstatus", getApprovedstatus());
		attributes.put("created_date", getCreated_date());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String sellerName = (String)attributes.get("sellerName");

		if (sellerName != null) {
			setSellerName(sellerName);
		}

		String contactNumber = (String)attributes.get("contactNumber");

		if (contactNumber != null) {
			setContactNumber(contactNumber);
		}

		Long content_id = (Long)attributes.get("content_id");

		if (content_id != null) {
			setContent_id(content_id);
		}

		Long category_id = (Long)attributes.get("category_id");

		if (category_id != null) {
			setCategory_id(category_id);
		}

		String title = (String)attributes.get("title");

		if (title != null) {
			setTitle(title);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String askingPrice = (String)attributes.get("askingPrice");

		if (askingPrice != null) {
			setAskingPrice(askingPrice);
		}

		String userScreenName = (String)attributes.get("userScreenName");

		if (userScreenName != null) {
			setUserScreenName(userScreenName);
		}

		Long location = (Long)attributes.get("location");

		if (location != null) {
			setLocation(location);
		}

		Long status = (Long)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Long approvedstatus = (Long)attributes.get("approvedstatus");

		if (approvedstatus != null) {
			setApprovedstatus(approvedstatus);
		}

		Date created_date = (Date)attributes.get("created_date");

		if (created_date != null) {
			setCreated_date(created_date);
		}
	}

	@JSON
	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@JSON
	@Override
	public String getSellerName() {
		if (_sellerName == null) {
			return StringPool.BLANK;
		}
		else {
			return _sellerName;
		}
	}

	@Override
	public void setSellerName(String sellerName) {
		_sellerName = sellerName;
	}

	@JSON
	@Override
	public String getContactNumber() {
		if (_contactNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactNumber;
		}
	}

	@Override
	public void setContactNumber(String contactNumber) {
		_contactNumber = contactNumber;
	}

	@JSON
	@Override
	public long getContent_id() {
		return _content_id;
	}

	@Override
	public void setContent_id(long content_id) {
		_content_id = content_id;
	}

	@JSON
	@Override
	public long getCategory_id() {
		return _category_id;
	}

	@Override
	public void setCategory_id(long category_id) {
		_columnBitmask |= CATEGORY_ID_COLUMN_BITMASK;

		if (!_setOriginalCategory_id) {
			_setOriginalCategory_id = true;

			_originalCategory_id = _category_id;
		}

		_category_id = category_id;
	}

	public long getOriginalCategory_id() {
		return _originalCategory_id;
	}

	@JSON
	@Override
	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	@Override
	public void setTitle(String title) {
		_columnBitmask |= TITLE_COLUMN_BITMASK;

		if (_originalTitle == null) {
			_originalTitle = _title;
		}

		_title = title;
	}

	public String getOriginalTitle() {
		return GetterUtil.getString(_originalTitle);
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	@Override
	public String getAskingPrice() {
		if (_askingPrice == null) {
			return StringPool.BLANK;
		}
		else {
			return _askingPrice;
		}
	}

	@Override
	public void setAskingPrice(String askingPrice) {
		_askingPrice = askingPrice;
	}

	@JSON
	@Override
	public String getUserScreenName() {
		if (_userScreenName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userScreenName;
		}
	}

	@Override
	public void setUserScreenName(String userScreenName) {
		_userScreenName = userScreenName;
	}

	@JSON
	@Override
	public long getLocation() {
		return _location;
	}

	@Override
	public void setLocation(long location) {
		_columnBitmask |= LOCATION_COLUMN_BITMASK;

		if (!_setOriginalLocation) {
			_setOriginalLocation = true;

			_originalLocation = _location;
		}

		_location = location;
	}

	public long getOriginalLocation() {
		return _originalLocation;
	}

	@JSON
	@Override
	public long getStatus() {
		return _status;
	}

	@Override
	public void setStatus(long status) {
		_status = status;
	}

	@JSON
	@Override
	public long getApprovedstatus() {
		return _approvedstatus;
	}

	@Override
	public void setApprovedstatus(long approvedstatus) {
		_approvedstatus = approvedstatus;
	}

	@JSON
	@Override
	public Date getCreated_date() {
		return _created_date;
	}

	@Override
	public void setCreated_date(Date created_date) {
		_columnBitmask = -1L;

		_created_date = created_date;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			BuySellProducts.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public BuySellProducts toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (BuySellProducts)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BuySellProductsImpl buySellProductsImpl = new BuySellProductsImpl();

		buySellProductsImpl.setId(getId());
		buySellProductsImpl.setSellerName(getSellerName());
		buySellProductsImpl.setContactNumber(getContactNumber());
		buySellProductsImpl.setContent_id(getContent_id());
		buySellProductsImpl.setCategory_id(getCategory_id());
		buySellProductsImpl.setTitle(getTitle());
		buySellProductsImpl.setDescription(getDescription());
		buySellProductsImpl.setAskingPrice(getAskingPrice());
		buySellProductsImpl.setUserScreenName(getUserScreenName());
		buySellProductsImpl.setLocation(getLocation());
		buySellProductsImpl.setStatus(getStatus());
		buySellProductsImpl.setApprovedstatus(getApprovedstatus());
		buySellProductsImpl.setCreated_date(getCreated_date());

		buySellProductsImpl.resetOriginalValues();

		return buySellProductsImpl;
	}

	@Override
	public int compareTo(BuySellProducts buySellProducts) {
		int value = 0;

		value = DateUtil.compareTo(getCreated_date(),
				buySellProducts.getCreated_date());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof BuySellProducts)) {
			return false;
		}

		BuySellProducts buySellProducts = (BuySellProducts)obj;

		long primaryKey = buySellProducts.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		BuySellProductsModelImpl buySellProductsModelImpl = this;

		buySellProductsModelImpl._originalCategory_id = buySellProductsModelImpl._category_id;

		buySellProductsModelImpl._setOriginalCategory_id = false;

		buySellProductsModelImpl._originalTitle = buySellProductsModelImpl._title;

		buySellProductsModelImpl._originalLocation = buySellProductsModelImpl._location;

		buySellProductsModelImpl._setOriginalLocation = false;

		buySellProductsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<BuySellProducts> toCacheModel() {
		BuySellProductsCacheModel buySellProductsCacheModel = new BuySellProductsCacheModel();

		buySellProductsCacheModel.id = getId();

		buySellProductsCacheModel.sellerName = getSellerName();

		String sellerName = buySellProductsCacheModel.sellerName;

		if ((sellerName != null) && (sellerName.length() == 0)) {
			buySellProductsCacheModel.sellerName = null;
		}

		buySellProductsCacheModel.contactNumber = getContactNumber();

		String contactNumber = buySellProductsCacheModel.contactNumber;

		if ((contactNumber != null) && (contactNumber.length() == 0)) {
			buySellProductsCacheModel.contactNumber = null;
		}

		buySellProductsCacheModel.content_id = getContent_id();

		buySellProductsCacheModel.category_id = getCategory_id();

		buySellProductsCacheModel.title = getTitle();

		String title = buySellProductsCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			buySellProductsCacheModel.title = null;
		}

		buySellProductsCacheModel.description = getDescription();

		String description = buySellProductsCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			buySellProductsCacheModel.description = null;
		}

		buySellProductsCacheModel.askingPrice = getAskingPrice();

		String askingPrice = buySellProductsCacheModel.askingPrice;

		if ((askingPrice != null) && (askingPrice.length() == 0)) {
			buySellProductsCacheModel.askingPrice = null;
		}

		buySellProductsCacheModel.userScreenName = getUserScreenName();

		String userScreenName = buySellProductsCacheModel.userScreenName;

		if ((userScreenName != null) && (userScreenName.length() == 0)) {
			buySellProductsCacheModel.userScreenName = null;
		}

		buySellProductsCacheModel.location = getLocation();

		buySellProductsCacheModel.status = getStatus();

		buySellProductsCacheModel.approvedstatus = getApprovedstatus();

		Date created_date = getCreated_date();

		if (created_date != null) {
			buySellProductsCacheModel.created_date = created_date.getTime();
		}
		else {
			buySellProductsCacheModel.created_date = Long.MIN_VALUE;
		}

		return buySellProductsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", sellerName=");
		sb.append(getSellerName());
		sb.append(", contactNumber=");
		sb.append(getContactNumber());
		sb.append(", content_id=");
		sb.append(getContent_id());
		sb.append(", category_id=");
		sb.append(getCategory_id());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", askingPrice=");
		sb.append(getAskingPrice());
		sb.append(", userScreenName=");
		sb.append(getUserScreenName());
		sb.append(", location=");
		sb.append(getLocation());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", approvedstatus=");
		sb.append(getApprovedstatus());
		sb.append(", created_date=");
		sb.append(getCreated_date());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("com.chola.productbuysell.model.BuySellProducts");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sellerName</column-name><column-value><![CDATA[");
		sb.append(getSellerName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactNumber</column-name><column-value><![CDATA[");
		sb.append(getContactNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>content_id</column-name><column-value><![CDATA[");
		sb.append(getContent_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>category_id</column-name><column-value><![CDATA[");
		sb.append(getCategory_id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>askingPrice</column-name><column-value><![CDATA[");
		sb.append(getAskingPrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userScreenName</column-name><column-value><![CDATA[");
		sb.append(getUserScreenName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>location</column-name><column-value><![CDATA[");
		sb.append(getLocation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>approvedstatus</column-name><column-value><![CDATA[");
		sb.append(getApprovedstatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>created_date</column-name><column-value><![CDATA[");
		sb.append(getCreated_date());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = BuySellProducts.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			BuySellProducts.class
		};
	private long _id;
	private String _sellerName;
	private String _contactNumber;
	private long _content_id;
	private long _category_id;
	private long _originalCategory_id;
	private boolean _setOriginalCategory_id;
	private String _title;
	private String _originalTitle;
	private String _description;
	private String _askingPrice;
	private String _userScreenName;
	private long _location;
	private long _originalLocation;
	private boolean _setOriginalLocation;
	private long _status;
	private long _approvedstatus;
	private Date _created_date;
	private long _columnBitmask;
	private BuySellProducts _escapedModel;
}